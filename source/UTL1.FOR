C
      SUBROUTINE UOPFIL(IN,ISTAT,FLNAME,IDFL,FINDEX)
C ******************************************************************
C THIS SUBROUTINE OPENS AN INPUT/OUTPUT FILE ASSOCIATED WITH
C UNIT [IN], STATUS [ISTAT], AND FILE NAME [FLNAME].
C FILE IS OPENED AS 'FORMATTED' IF [IN]>0; 'UNFORMATTED' IF [IN]<0.
C FILE STATUS IS 'OLD' IF [ISTAT]>0; 'NEW' IF <0; 'UNKNOWN' IF =0.
C IF [IDFL]>0, FILE WILL BE GIVEN THE DEFAULT NAME [FLNAME],
C OTHERWISE, THE SUBROUTINE WILL PROPMT FOR THE FILE NAME.
C THE CONTENT OF THE PROMPT IS IN [FINDEX].
C ******************************************************************
C last modified: 17-May-1991
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER*4 IN,ISTAT,I,IDFL
      CHARACTER FINDEX*30,FLNAME*30,FLFORM*15,FLSTAT*15
C
C--DETERMINE FILE FORM AND STATUS
      IF(IN.GT.0) THEN
        FLFORM='FORMATTED'
      ELSEIF(IN.LT.0) THEN
C--SEAWAT: FORM FOR BINARY FILES IS 'BINARY'
C--SEAWAT: TO USE WITH LAHEY COMPILER, FLFORM SHOULD BE 'UNFORMATTED'
c       FLFORM='UNFORMATTED'
	 FLFORM='BINARY'
      ELSE
        WRITE(*,100)
        STOP
      ENDIF
      IF(ISTAT.GT.0) THEN
        FLSTAT='OLD'
      ELSEIF(ISTAT.LT.0) THEN
        FLSTAT='NEW'
      ELSEIF(ISTAT.EQ.0) THEN
        FLSTAT='UNKNOWN'
      ENDIF
  100 FORMAT(1X,'Error: File Cannot Opened on Unit 0.')
C
C--GET FILE NAME IF NO DEFAULT NAME GIVEN
      IF(IDFL.GT.0) GOTO 200
C
      IF(FINDEX.EQ.' ') THEN
        IF(IN.GT.0) WRITE(*,101) IN
        IF(IN.LT.0) WRITE(*,102) -IN
      ELSE
        WRITE(*,103) FINDEX
      ENDIF
   10 READ(*,'(A30)') FLNAME
      IF(FLNAME.EQ.' ') THEN
        WRITE(*,*) 'Error: File Name Not Given.'
        WRITE(*,*) 'Please Try Again =>'
        GOTO 10
      ENDIF
  101 FORMAT(1X,'Enter Name of Formatted File for Unit',I3,': ')
  102 FORMAT(1X,'Enter Name of Unformatted File for Unit',I3,': ')
  103 FORMAT(1X,'Enter Name for ',A30)
C
C--OPEN FILE
  200 I=INDEX(FLNAME,' ')-1
      OPEN(ABS(IN),FILE=FLNAME(1:I),ERR=20,
     &  FORM=FLFORM,STATUS=FLSTAT)
      GOTO 30
   20 IF(IDFL.GT.0) THEN
        WRITE(*,2) FLNAME
        STOP
      ELSE
        WRITE(*,3) FLNAME
        GOTO 10
      ENDIF
    2 FORMAT(1X,'Error: File Cannot Be Found or Opened =>',A50)
    3 FORMAT(1X,'Error: File Cannot Be Found or Opened =>',A50
     &      /1X,'Please Try Again =>')
C
C--FILE OPENED SUCCESSFUL, REWIND AND RETURN
   30 REWIND (ABS(IN))
      RETURN
      END
C
C
      SUBROUTINE UBUDSV(KSTP,KPER,TEXT,IBDCHN,BUFF,NCOL,NROW,NLAY,IOUT)
C
C
C-----VERSION 1637 12MAY1987 UBUDSV
C     ******************************************************************
C     RECORD CELL-BY-CELL FLOW TERMS FOR ONE COMPONENT OF FLOW.
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 TEXT
      DIMENSION TEXT(4),BUFF(NCOL,NROW,NLAY)
C     ------------------------------------------------------------------
C
C1------WRITE AN UNFORMATTED RECORD CONTAINING IDENTIFYING
C1------INFORMATION.
C1S1--SEAWAT: CHANGING 'TIME' TO 'TRANSPORT'
      WRITE(IOUT,1) TEXT,IBDCHN,KSTP,KPER
    1 FORMAT(1X,'"',4A4,'" BUDGET VALUES WILL BE SAVED ON UNIT',I3,
     1     ' AT END OF TRANSPORT STEP',I3,', STRESS PERIOD',I3)
C
      WRITE(IBDCHN) KSTP,KPER,TEXT,NCOL,NROW,NLAY
C
C2------WRITE AN UNFORMATTED RECORD CONTAINING VALUES FOR
C2------EACH CELL IN THE GRID. THE ARRAY IS DIMENSIONED
C2------(NCOL,NROW,NLAY)
C--SEAWAT: CHANGED BUFF TO SINGLE PRECISION
      WRITE(IBDCHN) (((SNGL(BUFF(IC,IR,IL)),IC=1,NCOL),
     +                 IR=1,NROW),IL=1,NLAY)
C
C3------RETURN
      RETURN
      END
      SUBROUTINE UCOLNO(NLBL1,NLBL2,NSPACE,NCPL,NDIG,IOUT)
C
C
C-----VERSION 1638 12MAY1987 UCOLNO
C     ******************************************************************
C     OUTPUT COLUMN NUMBERS ABOVE A MATRIX PRINTOUT
C        NLBL1 IS THE START COLUMN LABEL (NUMBER)
C        NLBL2 IS THE STOP COLUMN LABEL (NUMBER)
C        NSPACE IS NUMBER OF BLANK SPACES TO LEAVE AT START OF LINE
C        NCPL IS NUMBER OF COLUMN NUMBERS PER LINE
C        NDIG IS NUMBER OF CHARACTERS IN EACH COLUMN FIELD
C        IOUT IS OUTPUT CHANNEL
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 DOT,SPACE,DG,BF
      DIMENSION BF(130),DG(10)
C
      DATA DG(1),DG(2),DG(3),DG(4),DG(5),DG(6),DG(7),DG(8),DG(9),DG(10)/
     1         '0   ','1   ','2   ','3   ','4   ','5   ','6   ',
     2         '7   ','8   ','9   '/
      DATA DOT,SPACE/'.   ','    '/
C     ------------------------------------------------------------------
C
C1------CALCULATE # OF COLUMNS TO BE PRINTED (NLBL), WIDTH
C1------OF A LINE (NTOT), NUMBER OF LINES (NWRAP).
      WRITE(IOUT,1)
    1 FORMAT(1X)
      NLBL=NLBL2-NLBL1+1
      N=NLBL
      IF(NLBL.GT.NCPL) N=NCPL
      NTOT=NSPACE+N*NDIG
      IF(NTOT.GT.130) GO TO 50
      NWRAP=(NLBL-1)/NCPL + 1
      J1=NLBL1-NCPL
      J2=NLBL1-1
C
C2------BUILD AND PRINT EACH LINE
      DO 40 N=1,NWRAP
C
C3------CLEAR THE BUFFER (BF).
      DO 20 I=1,130
      BF(I)=SPACE
   20 CONTINUE
      NBF=NSPACE
C
C4------DETERMINE FIRST (J1) AND LAST (J2) COLUMN # FOR THIS LINE.
      J1=J1+NCPL
      J2=J2+NCPL
      IF(J2.GT.NLBL2) J2=NLBL2
C5------LOAD THE COLUMN #'S INTO THE BUFFER.
      DO 30 J=J1,J2
      NBF=NBF+NDIG
      I2=J/10
      I1=J-I2*10+1
      BF(NBF)=DG(I1)
      IF(I2.EQ.0) GO TO 30
      I3=I2/10
      I2=I2-I3*10+1
      BF(NBF-1)=DG(I2)
      IF(I3.EQ.0) GO TO 30
      BF(NBF-2)=DG(I3+1)
   30 CONTINUE
C
C6------PRINT THE CONTENTS OF THE BUFFER (I.E. PRINT THE LINE).
      WRITE(IOUT,31) (BF(I),I=1,NBF)
   31 FORMAT(1X,130A1)
C
   40 CONTINUE
C
C7------PRINT A LINE OF DOTS (FOR ESTHETIC PURPOSES ONLY).
   50 NTOT=NTOT+5
      IF(NTOT.GT.130) NTOT=130
      WRITE(IOUT,51) (DOT,I=1,NTOT)
   51 FORMAT(1X,130A1)
C
C8------RETURN
      RETURN
      END
      SUBROUTINE ULAPRS(BUF,TEXT,KSTP,KPER,NCOL,NROW,ILAY,IPRN,IOUT)
C
C
C-----VERSION 1640 12MAY1987 ULAPRS
C     ******************************************************************
C     PRINT A 1 LAYER ARRAY IN STRIPS
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 TEXT
      DIMENSION BUF(NCOL,NROW),TEXT(4)
C     ------------------------------------------------------------------
C
C1------MAKE SURE THE FORMAT CODE (IP OR IPRN) IS BETWEEN 1
C1------AND 12.
      IP=IPRN
      IF(IP.LT.1 .OR. IP.GT.12) IP=12
C
C2------DETERMINE THE NUMBER OF VALUES (NCAP) PRINTED ON ONE LINE.
      IF(IP.EQ.1) NCAP=11
      IF(IP.EQ.2) NCAP=9
      IF(IP.GT.2 .AND. IP.LT.7) NCAP=15
      IF(IP.GT.6 .AND. IP.LT.12) NCAP=20
      IF(IP.EQ.12) NCAP=10
C
C3------CALCULATE THE NUMBER OF STRIPS (NSTRIP).
      NCPF=129/NCAP
      ISP=0
      IF(NCAP.GT.12) ISP=3
      NSTRIP=(NCOL-1)/NCAP + 1
      J1=1-NCAP
      J2=0
C
C4------LOOP THROUGH THE STRIPS.
      DO 2000 N=1,NSTRIP
C
C5------CALCULATE THE FIRST(J1) & THE LAST(J2) COLUMNS FOR THIS STRIP
      J1=J1+NCAP
      J2=J2+NCAP
      IF(J2.GT.NCOL) J2=NCOL
C
C6-------PRINT TITLE ON EACH STRIP
      WRITE(IOUT,1) TEXT,ILAY,KSTP,KPER
C6S1--SEAWAT: CHANGING TIME STEP TO TRANPSORT STEP
    1 FORMAT(1H1,10X,4A4,' IN LAYER',I3,' AT END OF TRANSPORT STEP',I3,
     1     ' IN STRESS PERIOD',I3/11X,71('-'))
C
C7------PRINT COLUMN NUMBERS ABOVE THE STRIP
      CALL UCOLNO(J1,J2,ISP,NCAP,NCPF,IOUT)
C
C8------LOOP THROUGH THE ROWS PRINTING COLS J1 THRU J2 WITH FORMAT IP
      DO 1000 I=1,NROW
      GO TO(10,20,30,40,50,60,70,80,90,100,110,120), IP
C
C------------FORMAT 10G10.3
   10 WRITE(IOUT,11) I,(BUF(J,I),J=J1,J2)
   11 FORMAT(1H0,I3,2X,1PG10.3,10(1X,G10.3))
      GO TO 1000
C
C------------FORMAT 8G13.6
   20 WRITE(IOUT,21) I,(BUF(J,I),J=J1,J2)
   21 FORMAT(1H0,I3,2X,1PG13.6,8(1X,G13.6))
      GO TO 1000
C
C------------FORMAT 15F7.1
   30 WRITE(IOUT,31) I,(BUF(J,I),J=J1,J2)
   31 FORMAT(1H0,I3,1X,15(1X,F7.1))
      GO TO 1000
C
C------------FORMAT 15F7.2
   40 WRITE(IOUT,41) I,(BUF(J,I),J=J1,J2)
   41 FORMAT(1H0,I3,1X,15(1X,F7.2))
      GO TO 1000
C
C------------FORMAT 15F7.3
   50 WRITE(IOUT,51) I,(BUF(J,I),J=J1,J2)
   51 FORMAT(1H0,I3,1X,15(1X,F7.3))
      GO TO 1000
C
C------------FORMAT 15F7.4
   60 WRITE(IOUT,61) I,(BUF(J,I),J=J1,J2)
   61 FORMAT(1H0,I3,1X,15(1X,F7.4))
      GO TO 1000
C
C------------FORMAT 20F5.0
   70 WRITE(IOUT,71) I,(BUF(J,I),J=J1,J2)
   71 FORMAT(1H0,I3,1X,20(1X,F5.0))
      GO TO 1000
C
C------------FORMAT 20F5.1
   80 WRITE(IOUT,81) I,(BUF(J,I),J=J1,J2)
   81 FORMAT(1H0,I3,1X,20(1X,F5.1))
      GO TO 1000
C
C------------FORMAT 20F5.2
   90 WRITE(IOUT,91) I,(BUF(J,I),J=J1,J2)
   91 FORMAT(1H0,I3,1X,20(1X,F5.2))
      GO TO 1000
C
C------------FORMAT 20F5.3
  100 WRITE(IOUT,101) I,(BUF(J,I),J=J1,J2)
  101 FORMAT(1H0,I3,1X,20(1X,F5.3))
      GO TO 1000
C
C------------FORMAT 20F5.4
  110 WRITE(IOUT,111) I,(BUF(J,I),J=J1,J2)
  111 FORMAT(1H0,I3,1X,20(1X,F5.4))
      GO TO 1000
C
C------------FORMAT 9G11.4
  120 WRITE(IOUT,121) I,(BUF(J,I),J=J1,J2)
  121 FORMAT(1H0,I3,2X,1PG11.4,9(1X,G11.4))
C
 1000 CONTINUE
 2000 CONTINUE
C
C9------RETURN
      RETURN
      END
      SUBROUTINE ULAPRW(BUF,TEXT,KSTP,KPER,NCOL,NROW,ILAY,IPRN,IOUT)
C
C
C-----VERSION 1642 12MAY1987 ULAPRW
C     ******************************************************************
C     PRINT 1 LAYER ARRAY
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 TEXT
      DIMENSION BUF(NCOL,NROW),TEXT(4)
C     ------------------------------------------------------------------
C
C1------PRINT A HEADER
      IF(ILAY.LE.0) GO TO 5
      WRITE(IOUT,1) TEXT,ILAY,KSTP,KPER
C1S1--SEAWAT: CHANGING TIME TO TRANSPORT
    1 FORMAT(1H1,10X,4A4,' IN LAYER',I3,' AT END OF TRANSPORT STEP',I3,
     1     ' IN STRESS PERIOD',I3/11X,71('-'))
C
C2------MAKE SURE THE FORMAT CODE (IP OR IPRN) IS
C2------BETWEEN 1 AND 12.
    5 IP=IPRN
      IF(IP.LT.1 .OR. IP.GT.12) IP=12
C
C3------CALL THE UTILITY MODULE UCOLNO TO PRINT COLUMN NUMBERS.
      IF(IP.EQ.1) CALL UCOLNO(1,NCOL,0,11,11,IOUT)
      IF(IP.EQ.2) CALL UCOLNO(1,NCOL,0,9,14,IOUT)
      IF(IP.GT.2 .AND. IP.LT.7) CALL UCOLNO(1,NCOL,3,15,8,IOUT)
      IF(IP.GT.6 .AND. IP.LT.12) CALL UCOLNO(1,NCOL,3,20,6,IOUT)
      IF(IP.EQ.12) CALL UCOLNO(1,NCOL,0,10,12,IOUT)
C
C4------LOOP THROUGH THE ROWS PRINTING EACH ONE IN ITS ENTIRETY.
      DO 1000 I=1,NROW
      GO TO(10,20,30,40,50,60,70,80,90,100,110,120), IP
C
C------------ FORMAT 11G10.3
   10 WRITE(IOUT,11) I,(BUF(J,I),J=1,NCOL)
   11 FORMAT(1H0,I3,2X,1PG10.3,10(1X,G10.3)/(5X,11(1X,G10.3)))
      GO TO 1000
C
C------------ FORMAT 9G13.6
   20 WRITE(IOUT,21) I,(BUF(J,I),J=1,NCOL)
   21 FORMAT(1H0,I3,2X,1PG13.6,8(1X,G13.6)/(5X,9(1X,G13.6)))
      GO TO 1000
C
C------------ FORMAT 15F7.1
   30 WRITE(IOUT,31) I,(BUF(J,I),J=1,NCOL)
   31 FORMAT(1H0,I3,1X,15(1X,F7.1)/(5X,15(1X,F7.1)))
      GO TO 1000
C
C------------ FORMAT 15F7.2
   40 WRITE(IOUT,41) I,(BUF(J,I),J=1,NCOL)
   41 FORMAT(1H0,I3,1X,15(1X,F7.2)/(5X,15(1X,F7.2)))
      GO TO 1000
C
C------------ FORMAT 15F7.3
   50 WRITE(IOUT,51) I,(BUF(J,I),J=1,NCOL)
   51 FORMAT(1H0,I3,1X,15(1X,F7.3)/(5X,15(1X,F7.3)))
      GO TO 1000
C
C------------ FORMAT 15F7.4
   60 WRITE(IOUT,61) I,(BUF(J,I),J=1,NCOL)
   61 FORMAT(1H0,I3,1X,15(1X,F7.4)/(5X,15(1X,F7.4)))
      GO TO 1000
C
C------------ FORMAT 20F5.0
   70 WRITE(IOUT,71) I,(BUF(J,I),J=1,NCOL)
   71 FORMAT(1H0,I3,1X,20(1X,F5.0)/(5X,20(1X,F5.0)))
      GO TO 1000
C
C------------ FORMAT 20F5.1
   80 WRITE(IOUT,81) I,(BUF(J,I),J=1,NCOL)
   81 FORMAT(1H0,I3,1X,20(1X,F5.1)/(5X,20(1X,F5.1)))
      GO TO 1000
C
C------------ FORMAT 20F5.2
   90 WRITE(IOUT,91) I,(BUF(J,I),J=1,NCOL)
   91 FORMAT(1H0,I3,1X,20(1X,F5.2)/(5X,20(1X,F5.2)))
      GO TO 1000
C
C------------ FORMAT 20F5.3
  100 WRITE(IOUT,101) I,(BUF(J,I),J=1,NCOL)
  101 FORMAT(1H0,I3,1X,20(1X,F5.3)/(5X,20(1X,F5.3)))
      GO TO 1000
C
C------------ FORMAT 20F5.4
  110 WRITE(IOUT,111) I,(BUF(J,I),J=1,NCOL)
  111 FORMAT(1H0,I3,1X,20(1X,F5.4)/(5X,20(1X,F5.4)))
      GO TO 1000
C
C------------ FORMAT 10G11.4
  120 WRITE(IOUT,121) I,(BUF(J,I),J=1,NCOL)
  121 FORMAT(1H0,I3,2X,1PG11.4,9(1X,G11.4)/(5X,10(1X,G11.4)))
C
 1000 CONTINUE
C
C5------RETURN
      RETURN
      END
      SUBROUTINE ULASAV(BUF,TEXT,KSTP,KPER,PERTIM,TOTIM,NCOL,
     1                   NROW,ILAY,ICHN)
C
C-----VERSION 1642 12MAY1987 ULASAV
C     ******************************************************************
C     SAVE 1 LAYER ARRAY ON DISK
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 TEXT
      DIMENSION BUF(NCOL,NROW),TEXT(4)
C     ------------------------------------------------------------------
C
C1------WRITE AN UNFORMATTED RECORD CONTAINING IDENTIFYING
C1------INFORMATION.
C--SEAWAT: CONVERT OUTPUT TO SINGLE PRECISION
      WRITE(ICHN) KSTP,KPER,SNGL(PERTIM),SNGL(TOTIM),TEXT,NCOL,NROW,ILAY
C
C2------WRITE AN UNFORMATTED RECORD CONTAINING ARRAY VALUES
C2------THE ARRAY IS DIMENSIONED (NCOL,NROW)
      WRITE(ICHN) ((SNGL(BUF(IC,IR)),IC=1,NCOL),IR=1,NROW)
C
C3------RETURN
      RETURN
      END
      SUBROUTINE U1DREL(A,ANAME,JJ,IN,IOUT)
C
C
C-----VERSION 1643 12MAY1987 U1DREL
C     ******************************************************************
C     ROUTINE TO INPUT 1-D REAL DATA MATRICES
C       A IS ARRAY TO INPUT
C       ANAME IS 24 CHARACTER DESCRIPTION OF A
C       JJ IS NO. OF ELEMENTS
C       IN IS INPUT UNIT
C       IOUT IS OUTPUT UNIT
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 ANAME
      CHARACTER*20 FMTIN
      DIMENSION A(JJ),ANAME(6)
C     ------------------------------------------------------------------
C
C1------READ ARRAY CONTROL RECORD.
      READ (IN,1) LOCAT,CNSTNT,FMTIN,IPRN
    1 FORMAT(I10,F10.0,A20,I10)
C
C2------USE LOCAT TO SEE WHERE ARRAY VALUES COME FROM.
      IF(LOCAT.GT.0) GO TO 90
C
C3------IF LOCAT=0 THEN SET ALL ARRAY VALUES EQUAL TO CNSTNT. RETURN
      DO 80 J=1,JJ
   80 A(J)=CNSTNT
      WRITE(IOUT,3) ANAME,CNSTNT
    3 FORMAT(1H0,52X,6A4,' =',G15.7)
      RETURN
C
C4------IF LOCAT>0 THEN READ FORMATTED RECORDS USING FORMAT FMTIN.
   90 WRITE(IOUT,5) ANAME,LOCAT,FMTIN
    5 FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',I3,
     1         ' USING FORMAT: ',A20/30X,79('-')/)
      READ (LOCAT,FMTIN) (A(J),J=1,JJ)
C
C5------IF CNSTNT NOT ZERO THEN MULTIPLY ARRAY VALUES BY CNSTNT.
      IF(CNSTNT.EQ.0.) GO TO 120
      DO 100 J=1,JJ
  100 A(J)=A(J)*CNSTNT
C
C6------IF PRINT CODE (IPRN) =>0 THEN PRINT ARRAY VALUES.
 120  IF(IPRN.LT.0) RETURN
      WRITE(IOUT,1001) (A(J),J=1,JJ)
 1001 FORMAT((1X,1PG12.5,9(1X,G12.5)))
      RETURN
C
C7------CONTINUE
      END
C
C
      SUBROUTINE U2DINT(IA,ANAME,II,JJ,K,IN,IOUT)
C
C-----VERSION 1645 12MAY1987 U2DINT
C     ******************************************************************
C     ROUTINE TO INPUT 2-D INTEGER DATA MATRICES
C       IA IS ARRAY TO INPUT
C       ANAME IS 24 CHARACTER DESCRIPTION OF IA
C       II IS NO. OF ROWS
C       JJ IS NO. OF COLS
C       K IS LAYER NO. (USED WITH NAME TO TITLE PRINTOUT UNLESS K IS 0)
C       IN IS INPUT UNIT
C       IOUT IS OUTPUT UNIT
c       if locat=100, LOCAT is reset to IN
C       if locat=101, BLOCK format is invoked
C       if locat=102, ZONAL format is invoked
C       if locat=103, FREE  format is invoked
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER ANAME*4,FMTIN*20,FLNAME*50,FINDEX*30
      DIMENSION IA(JJ,II),ANAME(6),IZV(100)
      LOGICAL OPD
C     ------------------------------------------------------------------
C
C1------READ ARRAY CONTROL RECORD.
      READ (IN,1) LOCAT,ICONST,FMTIN,IPRN
    1 FORMAT(I10,I10,A20,I10)
C
C-------IF LOCAT=100, RESET IT TO IN
C-------(compatibility with the MT3D array reader)
      IF(LOCAT.EQ.100) LOCAT=IN
C
C------CHECK WHETHER BLOCK FORMAT IS USED
      IF(LOCAT.EQ.101) THEN
        IF(K.GT.0) WRITE(IOUT,204) ANAME,K,IN
        IF(K.LE.0) WRITE(IOUT,205) ANAME,IN
  204   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING BLOCK FORMAT'/30X,95('-'))
  205   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING BLOCK FORMAT'/30X,82('-'))
        READ(IN,*) NBLOCK
        DO 2001 N=1,NBLOCK
        READ(IN,*) I1,I2,J1,J2,IZ
        DO 2002 I=I1,I2
        DO 2003 J=J1,J2
        IA(J,I)=IZ
 2003   CONTINUE
 2002   CONTINUE
 2001   CONTINUE
        GOTO 300
      ENDIF
C
C--CHECK WHETHER ZONAL FORMAT IS USED
      IF(LOCAT.EQ.102) THEN
        LOCAT=IN
        IF(K.GT.0) WRITE(IOUT,44) ANAME,K,LOCAT
        IF(K.LE.0) WRITE(IOUT,45) ANAME,LOCAT
   44   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING ZONAL FORMAT'/30X,97('-'))
   45   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING ZONAL FORMAT'/30X,84('-'))
        READ(LOCAT,*) NZONE
        IF(NZONE.GT.100) THEN
          PRINT *, 'MAXIMUM OF 100 ZONES IS ALLOWED'
          PRINT *, 'REDIMENSION ARRAY [IZV] IN SUBROUTINE U2DINT'
          STOP
        ENDIF
        READ(LOCAT,*) (IZV(N),N=1,NZONE)
        DO 55 I=1,II
        READ(LOCAT,FMTIN) (IA(J,I),J=1,JJ)
   55   CONTINUE
        DO 66 I=1,II
        DO 77 J=1,JJ
        NN=IA(J,I)
        IF(NN.EQ.0) THEN
          IA(J,I)=0
        ELSE
          IA(J,I)=IZV(NN)
        ENDIF
   77   CONTINUE
   66   CONTINUE
        GOTO 300
      ENDIF
C
C--CHECK WHETHER FREE FORMAT IS USED
      IF(LOCAT.EQ.103) THEN
        LOCAT=IN
        IF(K.GT.0) WRITE(IOUT,344) ANAME,K,LOCAT
        IF(K.LE.0) WRITE(IOUT,345) ANAME,LOCAT
  344   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING FREE FORMAT'/30X,97('-'))
  345   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING FREE FORMAT'/30X,84('-'))
        READ(LOCAT,*) ((IA(J,I),J=1,JJ),I=1,II)
        GOTO 300
      ENDIF
C
C--CHECK IF NECESSARY TO OPEN INPUT FILE
      IF(LOCAT.NE.IN .AND. LOCAT.NE.0) THEN
        INQUIRE(UNIT=ABS(LOCAT),OPENED=OPD)
        IF(.NOT.OPD) THEN
          FINDEX=' '
          CALL UOPFIL(LOCAT,1,FLNAME,0,FINDEX)
        ENDIF
      ENDIF
C
C2------USE LOCAT TO SEE WHERE ARRAY VALUES COME FROM.
      IF(LOCAT) 200,50,90
C
C3------IF LOCAT=0 THEN SET ALL ARRAY VALUES EQUAL TO ICONST. RETURN
   50 DO 80 I=1,II
      DO 80 J=1,JJ
   80 IA(J,I)=ICONST
      IF(K.GT.0) WRITE(IOUT,2) ANAME,ICONST,K
    2 FORMAT(1H0,52X,6A4,' =',I15,' FOR LAYER',I3)
      IF(K.LE.0) WRITE(IOUT,3) ANAME,ICONST
    3 FORMAT(1H0,52X,6A4,' =',I15)
      RETURN
C
C4------IF LOCAT>0 THEN READ FORMATTED RECORDS USING FORMAT FMTIN.
   90 IF(K.GT.0) WRITE(IOUT,4) ANAME,K,LOCAT,FMTIN
    4 FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     1       I3,' USING FORMAT: ',A20/30X,96('-'))
      IF(K.LE.0) WRITE(IOUT,5) ANAME,LOCAT,FMTIN
    5 FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     1        I3,' USING FORMAT: ',A20/30X,83('-'))
      DO 100 I=1,II
      READ (LOCAT,FMTIN) (IA(J,I),J=1,JJ)
  100 CONTINUE
      GO TO 300
C
C5------LOCAT<0 THEN READ UNFORMATTED RECORD CONTAINING ARRAY VALUES
  200 LOCAT=-LOCAT
      IF(K.GT.0) WRITE(IOUT,201) ANAME,K,LOCAT
  201 FORMAT(1H0,///30X,6A4,', LAYER',I3,
     1    ' WILL BE READ UNFORMATTED ON UNIT',I3/30X,73('-'))
      IF(K.LE.0) WRITE(IOUT,202) ANAME,LOCAT
  202 FORMAT(1H0,///30X,6A4,
     1    ' WILL BE READ UNFORMATTED ON UNIT',I3/30X,60('-'))
C
C5A------READ AN UNFORMATTED DUMMY RECORD FIRST.
      READ(LOCAT)
      READ(LOCAT) IA
C
C6------IF ICONST NOT ZERO THEN MULTIPLY ARRAY VALUES BY ICONST.
  300 IF(ICONST.EQ.0) GO TO 320
      DO 310 I=1,II
      DO 310 J=1,JJ
      IA(J,I)=IA(J,I)*ICONST
  310 CONTINUE
C
C7------IF PRINT CODE (IPRN) =>0 THEN PRINT ARRAY VALUES.
  320 IF(IPRN.LT.0) RETURN
      IF(IPRN.GT.5) IPRN=0
      IPRN=IPRN+1
C
C8------PRINT COLUMN NUMBERS AT TOP OF PAGE.
      IF(IPRN.EQ.1) CALL UCOLNO(1,JJ,0,10,12,IOUT)
      NL=125/IPRN/5*5
      IF(IPRN.GT.1) CALL UCOLNO(1,JJ,4,NL,IPRN,IOUT)
C
C9------PRINT EACH ROW IN THE ARRAY.
      DO 110 I=1,II
C
C10-----SELECT THE FORMAT
      GO TO(101,102,103,104,105,106), IPRN
C
C----------------FORMAT 10I11
  101 WRITE(IOUT,1001) I,(IA(J,I),J=1,JJ)
 1001 FORMAT(1H0,I3,2X,I11,9(1X,I11)/(5X,10(1X,I11)))
      GO TO 110
C
C----------------FORMAT 60I1
  102 WRITE(IOUT,1002) I,(IA(J,I),J=1,JJ)
 1002 FORMAT(1H0,I3,1X,60(1X,I1)/(5X,60(1X,I1)))
      GO TO 110
C
C----------------FORMAT 40I2
  103 WRITE(IOUT,1003) I,(IA(J,I),J=1,JJ)
 1003 FORMAT(1H0,I3,1X,40(1X,I2)/(5X,40(1X,I2)))
      GO TO 110
C
C----------------FORMAT 30I3
  104 WRITE(IOUT,1004) I,(IA(J,I),J=1,JJ)
 1004 FORMAT(1H0,I3,1X,30(1X,I3)/(5X,30(1X,I3)))
      GO TO 110
C
C----------------FORMAT 25I4
  105 WRITE(IOUT,1005) I,(IA(J,I),J=1,JJ)
 1005 FORMAT(1H0,I3,1X,25(1X,I4)/(5X,25(1X,I4)))
      GO TO 110
C
C----------------FORMAT 20I5
  106 WRITE(IOUT,1006) I,(IA(J,I),J=1,JJ)
 1006 FORMAT(1H0,I3,1X,20(1X,I5)/(5X,20(1X,I5)))
  110 CONTINUE
      RETURN
C
C11-----RETURN
      END
C
C
      SUBROUTINE U2DREL(A,ANAME,II,JJ,K,IN,IOUT)
C
C
C-----VERSION 1648 12MAY1987 U2DREL
C     ******************************************************************
C     ROUTINE TO INPUT 2-D REAL DATA MATRICES
C       A IS ARRAY TO INPUT
C       ANAME IS 24 CHARACTER DESCRIPTION OF A
C       II IS NO. OF ROWS
C       JJ IS NO. OF COLS
C       K IS LAYER NO. (USED WITH NAME TO TITLE PRINTOUT UNLESS K IS 0)
C       IN IS INPUT UNIT
C       IOUT IS OUTPUT UNIT
C       if locat=100, LOCAT is reset to IN
C       if locat=101, BLOCK format is invoked
C       if locat=102, ZONAL format is invoked
C       if locat=103, FREE  format is invoked
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER ANAME*4,FMTIN*20,FLNAME*50,FINDEX*30
      DIMENSION A(JJ,II),ANAME(6),ZV(100)
      LOGICAL OPD

C--SEAWAT: NEED CHARACTER TEXT FOR READING FROM BINARY FILE
	CHARACTER TEXT*16
C--SEAWAT: NEED A SINGLE PRECISION REAL 'T' FOR CONVERTING THE SINGLE
C--SEAWAT: PRECISION INPUT ARRAY TO DOUBLE PRECISION PASSING ARRAY "A"
	REAL T
C     ------------------------------------------------------------------
C
C1------READ ARRAY CONTROL RECORD.
      READ (IN,1) LOCAT,CNSTNT,FMTIN,IPRN
    1 FORMAT(I10,F10.0,A20,I10)
C
C-------IF LOCAT=100, RESET IT TO IN
C-------(compatibility with the MT3D array reader)
      IF(LOCAT.EQ.100) LOCAT=IN
C
C-------CHECK WHETHER BLOCK FORMAT IS USED
      IF(LOCAT.EQ.101) THEN
        IF(K.GT.0) WRITE(IOUT,204) ANAME,K,IN
        IF(K.LE.0) WRITE(IOUT,205) ANAME,IN
  204   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING BLOCK FORMAT'/30X,95('-'))
  205   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING BLOCK FORMAT'/30X,82('-'))
        READ(IN,*) NBLOCK
        DO 2001 N=1,NBLOCK
        READ(IN,*) I1,I2,J1,J2,Z
        DO 2002 I=I1,I2
        DO 2003 J=J1,J2
        A(J,I)=Z
 2003   CONTINUE
 2002   CONTINUE
 2001   CONTINUE
        GOTO 300
      ENDIF
C
C--CHECK WHETHER ZONAL FORMAT IS USED
      IF(LOCAT.EQ.102) THEN
        LOCAT=IN
        IF(K.GT.0) WRITE(IOUT,44) ANAME,K,LOCAT
        IF(K.LE.0) WRITE(IOUT,45) ANAME,LOCAT
   44   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING ZONAL FORMAT'/30X,97('-'))
   45   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING ZONAL FORMAT'/30X,84('-'))
        READ(LOCAT,*) NZONE
        IF(NZONE.GT.100) THEN
          PRINT *, 'MAXIMUM OF 100 ZONES IS ALLOWED'
          PRINT *, 'REDIMENSION ARRAY [ZV] IN SUBROUTINE U2DREL'
          STOP
        ENDIF
        READ(LOCAT,*) (ZV(N),N=1,NZONE)
        DO 55 I=1,II
        READ(LOCAT,FMTIN) (A(J,I),J=1,JJ)
   55   CONTINUE
        DO 66 I=1,II
        DO 77 J=1,JJ
        NN=A(J,I)
        IF(NN.EQ.0) THEN
          A(J,I)=0
        ELSE
          A(J,I)=ZV(NN)
        ENDIF
   77   CONTINUE
   66   CONTINUE
        GOTO 300
      ENDIF
C
C--CHECK WHETHER FREE FORMAT IS USED
      IF(LOCAT.EQ.103) THEN
        LOCAT=IN
        IF(K.GT.0) WRITE(IOUT,344) ANAME,K,LOCAT
        IF(K.LE.0) WRITE(IOUT,345) ANAME,LOCAT
  344   FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     &  I3,' USING FREE FORMAT'/30X,97('-'))
  345   FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     &  I3,' USING FREE FORMAT'/30X,84('-'))
        READ(LOCAT,*) ((A(J,I),J=1,JJ),I=1,II)
        GOTO 300
      ENDIF
C
C--CHECK IF NECESSARY TO OPEN INPUT FILE
      IF(LOCAT.NE.IN .AND. LOCAT.NE.0) THEN
        INQUIRE(UNIT=ABS(LOCAT),OPENED=OPD)
        IF(.NOT.OPD) THEN
          FINDEX=' '
          CALL UOPFIL(LOCAT,1,FLNAME,0,FINDEX)
        ENDIF
      ENDIF
C
C2------USE LOCAT TO SEE WHERE ARRAY VALUES COME FROM.
      IF(LOCAT) 200,50,90
C
C3------IF LOCAT=0 THEN SET ALL ARRAY VALUES EQUAL TO CNSTNT. RETURN
   50 DO 80 I=1,II
      DO 80 J=1,JJ
   80 A(J,I)=CNSTNT
      IF(K.GT.0) WRITE(IOUT,2) ANAME,CNSTNT,K
    2 FORMAT(1H0,52X,6A4,' =',G15.7,' FOR LAYER',I3)
      IF(K.LE.0) WRITE(IOUT,3) ANAME,CNSTNT
    3 FORMAT(1H0,52X,6A4,' =',G15.7)
      RETURN
C
C4------IF LOCAT>0 THEN READ FORMATTED RECORDS USING FORMAT FMTIN.
   90 IF(K.GT.0) WRITE(IOUT,4) ANAME,K,LOCAT,FMTIN
    4 FORMAT(1H0,///30X,6A4,' FOR LAYER',I3,' WILL BE READ ON UNIT',
     1       I3,' USING FORMAT: ',A20/30X,96('-'))
      IF(K.LE.0) WRITE(IOUT,5) ANAME,LOCAT,FMTIN
    5 FORMAT(1H0,///30X,6A4,' WILL BE READ ON UNIT',
     1       I3,' USING FORMAT: ',A20/30X,83('-'))
      DO 100 I=1,II
      READ (LOCAT,FMTIN) (A(J,I),J=1,JJ)
  100 CONTINUE
      GO TO 300
C
C5------LOCAT<0 THEN READ UNFORMATTED RECORD CONTAINING ARRAY VALUES
  200 LOCAT=-LOCAT
      IF(K.GT.0) WRITE(IOUT,201) ANAME,K,LOCAT
  201 FORMAT(1H0,///30X,6A4,', LAYER',I3,
     1    ' WILL BE READ UNFORMATTED ON UNIT',I3/30X,73('-'))
      IF(K.LE.0) WRITE(IOUT,202) ANAME,LOCAT
  202 FORMAT(1H0,///30X,
     1    ' WILL BE READ UNFORMATTED ON UNIT',I3/30X,60('-'))
C
C5A------READ AN UNFORMATTED DUMMY RECORD FIRST.
C5A--SEAWAT: NEED TO READ DUMMY RECORD EXPLICTLY BECAUSE "TRUE BINARY"
      READ(LOCAT) I,I,T,T,TEXT,NCOL,NROW,ILAY
	DO I=1,NROW
	DO J=1,NCOL
		READ(LOCAT) T
		A(J,I)=T
	ENDDO
	ENDDO

	
C
C6------IF CNSTNT NOT ZERO THEN MULTIPLY ARRAY VALUES BY CNSTNT.
  300 IF(CNSTNT.EQ.0.) GO TO 320
      DO 310 I=1,II
      DO 310 J=1,JJ
      A(J,I)=A(J,I)*CNSTNT
  310 CONTINUE
C
C7------IF PRINT CODE (IPRN) =>0 THEN PRINT ARRAY VALUES.
  320 IF(IPRN.LT.0) RETURN
      CALL ULAPRW(A,ANAME,0,0,JJ,II,0,IPRN,IOUT)
      RETURN
C
C8------RETURN
      END
C
      SUBROUTINE IARRAY(IA,ANAME,II,JJ,K,IN,IOUT)
C ************************************************************
C THIS SUBROUTINE IS USED TO INPUT 1 OR 2D INTEGER ARRAYS
C BY BLOCK, ZONAL, LIST-DIRECTED, UNFORMATTED,
C OR ANY USER-SPECIFIED FORMAT.
C ************************************************************
C last modified: 17-May-1991
C
      
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NZMAX=200)
	LOGICAL*4 OPD
      CHARACTER ANAME*24,FMTIN*20,FINDEX*30,FLNAME*50
      DIMENSION IA(JJ,II),IZV(NZMAX)
C
C--READ ARRAY CONTROL RECORD
C  =========================
      READ (IN,1) IREAD,ICONST,FMTIN,IPRN
    1 FORMAT(I10,I10,A20,I10)
C
C--IF IREAD=0, SET ALL ARRAY VALUES EQUAL TO ICONST.
C  =================================================
      IF(IREAD.NE.0) GOTO 50
C
      DO 10 I=1,II
        DO 12 J=1,JJ
          IA(J,I)=ICONST
   12   CONTINUE
   10 CONTINUE
      IF(K.GT.0) WRITE(IOUT,14) ANAME,ICONST,K
   14 FORMAT(39X,A24,' =',I15,' FOR LAYER',I3)
      IF(K.LE.0) WRITE(IOUT,16) ANAME,ICONST
   16 FORMAT(39X,A24,' =',I15)
      GOTO 500
C
C--IF IREAD=100, INPUT ARRAY USING FORMAT FMTIN
C  ============================================
   50 IF(IREAD.NE.100) GOTO 90
C
      IF(K.GT.0) WRITE(IOUT,20) ANAME,K,IN,FMTIN
      IF(K.LE.0) WRITE(IOUT,22) ANAME,IN,FMTIN
   20 FORMAT(/21X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING FORMAT: "',A20,'"'/21X,90('-'))
   22 FORMAT(/27X,A24,' READ ON UNIT',
     & I3,' USING FORMAT: "',A20,'"'/27X,77('-'))
      DO 30 I=1,II
        READ (IN,FMTIN) (IA(J,I),J=1,JJ)
   30 CONTINUE
      GOTO 300
C
C--IF IREAD=101, INPUT ARRAY USING BLOCK FORMAT
C  ============================================
   90 IF(IREAD.NE.101) GOTO 100
C
      IF(K.GT.0) WRITE(IOUT,55) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,60) ANAME,IN
   55 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING BLOCK FORMAT'/29X,72('-'))
   60 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING BLOCK FORMAT'/35X,59('-'))
C
C--READ NUMBER OF BLOCKS
      READ(IN,*) NBLOCK
C
C--READ VALUE OF EACH BLOCK
C--AND ASSIGN VALUE TO CELLS WITHIN THE BLOCK
      DO 70 N=1,NBLOCK
        READ(IN,*) I1,I2,J1,J2,IZ
        DO 72 I=I1,I2
          DO 74 J=J1,J2
            IA(J,I)=IZ
   74     CONTINUE
   72   CONTINUE
   70 CONTINUE
      GOTO 300
C
C--IF IREAD=102, INPUT ARRAY USING ZONAL FORMAT
C  ============================================
  100 IF(IREAD.NE.102) GOTO 200
C
      IF(K.GT.0) WRITE(IOUT,150) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,160) ANAME,IN
  150 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING ZONAL FORMAT'/29X,72('-'))
  160 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING ZONAL FORMAT'/35X,59('-'))
C
C--READ NUMBER OF ZONES
      READ(IN,*) NZONES
      IF(NZONES.GT.NZMAX) THEN
        WRITE(IOUT,165)
        STOP
      ENDIF
  165 FORMAT(1X,'ERROR: MAXIMUM NUMBER OF ZONES EXCEEDED'
     & /1X,'PLEASE INCREASE [NZMAX] IN SUBROUTINE [IARRAY]')
C
C--READ ZONAL MAP WITH FORMAT FMTIN
      READ(IN,*) (IZV(N),N=1,NZONES)
      DO 175 I=1,II
        READ(IN,FMTIN) (IA(J,I),J=1,JJ)
  175 CONTINUE
C
C--ASSIGN ZONAL VALUES
      DO 176 I=1,II
        DO 177 J=1,JJ
          NN=IA(J,I)
          IF(NN.EQ.0) THEN
            IA(J,I)=0
          ELSE
            IA(J,I)=IZV(NN)
          ENDIF
  177   CONTINUE
  176 CONTINUE
      GOTO 300
C
C--IF IREAD=103, INPUT ARRAY USING FREE FORMAT
C  ===========================================
  200 IF(IREAD.NE.103) GOTO 250
C
      IF(K.GT.0) WRITE(IOUT,210) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,220) ANAME,IN
  210 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING FREE FORMAT'/29X,71('-'))
  220 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING FREE FORMAT'/35X,58('-'))
C
C--READ ARRAY VALUES WITH FREE FORMAT
      READ(IN,*) ((IA(J,I),J=1,JJ),I=1,II)
      GOTO 300
C
C--IF IREAD IS EQUAL TO ANY OTHER VALUES,
C--READ ARRAY VALUES FROM AN EXTERNAL FILE ON UNIT [IREAD]
C  =======================================================
C
C--CHECK IF THE EXTERNAL FILE HAS BEEN OPENED.  IF NOT, OPEN
  250 INQUIRE(UNIT=IABS(IREAD),OPENED=OPD)
      IF(.NOT.OPD) THEN
        FINDEX=' '
        CALL UOPFIL(IREAD,1,FLNAME,0,FINDEX)
      ENDIF
C
C--IF IREAD<0, INPUT ARRAY FROM AN UNFORMATTED FILE OM UNIT [-IREAD]
      IF(IREAD.LT.0) THEN
        IF(K.GT.0) WRITE(IOUT,256) ANAME,K,-IREAD
        IF(K.LE.0) WRITE(IOUT,258) ANAME,-IREAD
  256   FORMAT(/33X,A24,' FOR LAYER',I3,' READ UNFORMATTED',
     &  ' ON UNIT',I3/33X,65('-'))
  258   FORMAT(/40X,A24,' READ UNFORMATTED ON UNIT',
     &  I3/40X,52('-'))
C
C--READ AN UNFORMATTED DUMMY RECORD FIRST.
        READ(-IREAD)
        READ(-IREAD) IA
      ELSE
C
C--ELSE IF IREAD>0, INPUT ARRAY FROM AN FORMATTED FILE ON UNIT [IREAD]
C--WITH FORMAT FMTIN
        IF(K.GT.0) WRITE(IOUT,20) ANAME,K,IREAD,FMTIN
        IF(K.LE.0) WRITE(IOUT,22) ANAME,IREAD,FMTIN
        DO 270 I=1,II
          READ (IREAD,FMTIN) (IA(J,I),J=1,JJ)
  270   CONTINUE
      ENDIF
C
C--IF ICONST NOT ZERO THEN MULTIPLY ARRAY VALUES BY ICONST.
  300 IF(ICONST.EQ.0) GO TO 320
      DO 302 I=1,II
      DO 304 J=1,JJ
        IA(J,I)=IA(J,I)*ICONST
  304 CONTINUE
  302 CONTINUE
C
C--IF PRINT CODE (IPRN) =>0 THEN PRINT ARRAY VALUES
  320 IF(IPRN.LT.0) GOTO 500
      CALL IPRINT(IA,ANAME,0,0,0,JJ,II,0,IPRN,IOUT)
C
C--RETURN
  500 RETURN
      END
C
C
      SUBROUTINE RARRAY(A,ANAME,II,JJ,K,IN,IOUT)
C ********************************************************
C THIS SUBROUTINE IS USED TO INPUT 1 OR 2D REAL ARRAYS,
C BY BLOCK, ZONAL, LIST-DIRECTED, UNFORMATTED,
C OR ANY USER-SPECIFIED FORMAT.
C ********************************************************
C last modified: 17-May-1990
C
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NZMAX=200)
	LOGICAL*4 OPD
      CHARACTER ANAME*24,FMTIN*20,FINDEX*30,FLNAME*50
      DIMENSION A(JJ,II),ZV(NZMAX)
C--SEAWAT: NEED CHARACTER TEXT FOR DUMMY READ FROM BINARY FILE
	CHARACTER TEXT*16
C--SEAWAT: NEED REAL*4 VARIABLE T TO READ SINGLE PRECISION BINARY FILE
	REAL T
C
C--READ ARRAY CONTROL RECORD
C  =========================
      READ (IN,1) IREAD,CONST,FMTIN,IPRN
    1 FORMAT(I10,F10.0,A20,I10)
C
C--IF IREAD=0, SET ALL ARRAY VALUES EQUAL TO CONST.
C  ================================================
      IF(IREAD.NE.0) GOTO 50
C
      DO 10 I=1,II
        DO 12 J=1,JJ
          A(J,I)=CONST
   12   CONTINUE
   10 CONTINUE
      IF(K.GT.0) WRITE(IOUT,14) ANAME,CONST,K
   14 FORMAT(39X,A24,' =',G15.7,' FOR LAYER',I3)
      IF(K.LE.0) WRITE(IOUT,16) ANAME,CONST
   16 FORMAT(39X,A24,' =',G15.7)
      GOTO 500
C
C--IF IREAD=100, INPUT ARRAY USING FORMAT FMTIN
C  ============================================
   50 IF(IREAD.NE.100) GOTO 90
C
      IF(K.GT.0) WRITE(IOUT,20) ANAME,K,IN,FMTIN
      IF(K.LE.0) WRITE(IOUT,22) ANAME,IN,FMTIN
   20 FORMAT(/21X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING FORMAT: "',A20,'"'/21X,90('-'))
   22 FORMAT(/27X,A24,' READ ON UNIT',
     & I3,' USING FORMAT: "',A20,'"'/27X,77('-'))
      DO 30 I=1,II
        READ (IN,FMTIN) (A(J,I),J=1,JJ)
   30 CONTINUE
      GOTO 300
C
C--IF IREAD=101, INPUT ARRAY USING BLOCK FORMAT
C  ============================================
   90 IF(IREAD.NE.101) GOTO 100
C
      IF(K.GT.0) WRITE(IOUT,55) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,60) ANAME,IN
   55 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING BLOCK FORMAT'/29X,72('-'))
   60 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING BLOCK FORMAT'/35X,59('-'))
C
C--READ NUMBER OF BLOCKS
      READ(IN,*) NBLOCK
C
C--READ VALUE OF EACH BLOCK
C--AND ASSIGN VALUE TO CELLS WITHIN THE BLOCK
      DO 70 N=1,NBLOCK
        READ(IN,*) I1,I2,J1,J2,ZZ
        DO 72 I=I1,I2
          DO 74 J=J1,J2
            A(J,I)=ZZ
   74     CONTINUE
   72   CONTINUE
   70 CONTINUE
      GOTO 300
C
C--IF IREAD=102, INPUT ARRAY USING ZONAL FORMAT
C  ============================================
  100 IF(IREAD.NE.102) GOTO 200
C
      IF(K.GT.0) WRITE(IOUT,150) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,160) ANAME,IN
  150 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING ZONAL FORMAT'/29X,72('-'))
  160 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING ZONAL FORMAT'/35X,59('-'))
C
C--READ NUMBER OF ZONES
      READ(IN,*) NZONES
      IF(NZONES.GT.NZMAX) THEN
        WRITE(IOUT,165)
        STOP
      ENDIF
  165 FORMAT(1X,'ERROR: MAXIMUM NUMBER OF ZONES EXCEEDED'
     & /1X,'PLEASE INCREASE [NZMAX] IN SUBROUTINE [RARRAY]')
C
C--READ ZONAL MAP WITH FORMAT FMTIN
      READ(IN,*) (ZV(N),N=1,NZONES)
      DO 175 I=1,II
        READ(IN,FMTIN) (A(J,I),J=1,JJ)
  175 CONTINUE
C
C--ASSIGN ZONAL VALUES
      DO 176 I=1,II
        DO 177 J=1,JJ
          NN=A(J,I)
          IF(NN.EQ.0) THEN
            A(J,I)=0
          ELSE
            A(J,I)=ZV(NN)
          ENDIF
  177   CONTINUE
  176 CONTINUE
      GOTO 300
C
C--IF IREAD=103, INPUT ARRAY USING FREE FORMAT
C  ===========================================
  200 IF(IREAD.NE.103) GOTO 250
C
      IF(K.GT.0) WRITE(IOUT,210) ANAME,K,IN
      IF(K.LE.0) WRITE(IOUT,220) ANAME,IN
  210 FORMAT(/29X,A24,' FOR LAYER',I3,' READ ON UNIT',
     & I3,' USING FREE FORMAT'/29X,71('-'))
  220 FORMAT(/35X,A24,' READ ON UNIT',
     & I3,' USING FREE FORMAT'/35X,58('-'))
C
C--READ ARRAY VALUES WITH FREE FORMAT
      READ(IN,*) ((A(J,I),J=1,JJ),I=1,II)
      GOTO 300
C
C--IF IREAD IS EQUAL TO ANY OTHER VALUES,
C--READ ARRAY VALUES FROM AN EXTERNAL FILE ON UNIT [IREAD]
C  =======================================================
C
C--CHECK IF THE EXTERNAL FILE HAS BEEN OPENED.  IF NOT, OPEN
  250 INQUIRE(UNIT=IABS(IREAD),OPENED=OPD)
      IF(.NOT.OPD) THEN
        FINDEX=' '
        CALL UOPFIL(IREAD,1,FLNAME,0,FINDEX)
      ENDIF
C
C--IF IREAD<0, INPUT ARRAY FROM AN UNFORMATTED FILE OM UNIT [-IREAD]
      IF(IREAD.LT.0) THEN
        IF(K.GT.0) WRITE(IOUT,256) ANAME,K,-IREAD
        IF(K.LE.0) WRITE(IOUT,258) ANAME,-IREAD
  256   FORMAT(/33X,A24,' FOR LAYER',I3,' READ UNFORMATTED',
     &  ' ON UNIT',I3/33X,65('-'))
  258   FORMAT(/40X,A24,' READ UNFORMATTED ON UNIT',
     &  I3/40X,52('-'))
C
C--READ AN UNFORMATTED DUMMY RECORD FIRST.
C--SEAWAT: NOW READING NCOL AND NROW
        READ(-IREAD) I,I,I,T,TEXT,NCOL,NROW,I
C--SEAWAT: NEED TO READ SINGLE PRECISION AND THEN PUT INTO DOUBLE PRECISION A ARRAY
	  DO I=1,NROW
	  DO J=1,NCOL
	    READ(-IREAD) T
	    A(J,I)=T
	  ENDDO
	  ENDDO
C        READ(-IREAD) A
      ELSE
C
C--ELSE IF IREAD>0, INPUT ARRAY FROM AN FORMATTED FILE ON UNIT [IREAD]
C--WITH FORMAT FMTIN
        IF(K.GT.0) WRITE(IOUT,20) ANAME,K,IREAD,FMTIN
        IF(K.LE.0) WRITE(IOUT,22) ANAME,IREAD,FMTIN
        DO 270 I=1,II
          READ (IREAD,FMTIN) (A(J,I),J=1,JJ)
  270   CONTINUE
      ENDIF
C
C--IF CONST NOT ZERO THEN MULTIPLY ARRAY VALUES BY CONST.
  300 IF(CONST.EQ.0) GO TO 320
      DO 302 I=1,II
      DO 304 J=1,JJ
        A(J,I)=A(J,I)*CONST
  304 CONTINUE
  302 CONTINUE
C
C--IF PRINT CODE (IPRN) =>0 THEN PRINT ARRAY VALUES.
  320 IF(IPRN.LT.0) RETURN
      CALL RPRINT(A,ANAME,0,0,0,JJ,II,0,IPRN,IOUT)
C
C8------RETURN
  500 RETURN
      END
C
C
      SUBROUTINE IPRINT(IA,TEXT,KTRN,KSTP,KPER,NCOL,NROW,
     & ILAY,IPRN,IOUT)
C ************************************************************
C PRINT AN INTEGER 1 OR 2D ARRAY IN WRAP OR STRIP FORM.
C (Modified from McDonald and Harbaugh, 1988).
C ************************************************************
C last modified: 14-Oct-1990
C
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER TEXT*16
      DIMENSION IA(NCOL,NROW)
C
C--PRINT A HEADER
      IF(ILAY.LE.0) GO TO 5
      IF(KTRN.GT.0) GO TO 4
      WRITE(IOUT,1) TEXT,ILAY,KSTP,KPER
C--SEAWAT: CHANGING TIME TO TRANSPORT
    1 FORMAT(/35X,A16,' IN LAYER',I3,
     & ' FOR TRANSPORT STEP',I3,', STRESS PERIOD',I3/35X,63('-'))
      GOTO 5
C
    4 WRITE(IOUT,2) TEXT,ILAY,KTRN,KSTP,KPER
C--SEAWAT: CHANGING TIME TO TRANSPORT
    2 FORMAT(/21X,A16,' IN LAYER',I3,' AT END OF TRANSPORT STEP',I5,
     & ', TRANSPORT STEP',I3,', STRESS PERIOD',I3/21X,90('-'))
C
C--MAKE SURE IPRN VALUE IS WITHIN PRINT FORMAT-CODE RANGE
    5 IP=IPRN
      IF(IP.GT.5.OR.IP.LT.-5) IP=0
      IF(IP.GE.0) IP=IP+1
      IF(IP.LT.0) IP=IP-1
C
C--DETERMINE THE NUMBER OF VALUES (NCAP) PRINTED ON ONE LINE,
C--NUMBER OF BLANK SPACES TO LEAVE AT START OF THE LINE (ISP)
C--AND NUMBER OF SPACES IN EACH COLUMN FIELD (NCPF)
      IF(IABS(IP).EQ.1) THEN
        NCPF=12
        ISP=4
        NCAP=10
      ELSEIF(IABS(IP).GT.1) THEN
        NCPF=IABS(IP)
        ISP=4
        NCAP=125/IABS(IP)/5*5
      ENDIF
C
C--IF IP>0, ARRAY IS PRINTED IN WRAP FORMAT
      IF(IP.GT.0.OR.NCOL.LE.NCAP) THEN
        NSTRIP=1
        J1=1
        J2=NCOL
C
C--ELSE IF IP<0, ARRAY IS PRINTED IN STRIP FORMAT.
C--NUMBER OF STRIPS IS CALCULATED AS [NSTRIP]
      ELSE
        NSTRIP=(NCOL-1)/NCAP+1
        J1=1-NCAP
        J2=0
      ENDIF
C
C--LOOP THROUGH THE STRIPS
      DO 400 N=1,NSTRIP
C
C--CALCULATE FIRST(J1) & LAST(J2) COLUMNS FOR THIS STRIP
C--IF STRIP FORM IS USED
      IF(NSTRIP.GT.1) THEN
        J1=J1+NCAP
        J2=J2+NCAP
        IF(J2.GT.NCOL) J2=NCOL
      ENDIF
C
C--PRINT COLUMN NUMBERS ABOVE THE STRIP.
      CALL UCOLNO(J1,J2,ISP,NCAP,NCPF,IOUT)
C
C--PRINT EACH ROW
      DO 410 I=1,NROW
C
C--SELECT THE FORMAT
        GOTO (401,402,403,404,405,406), IABS(IP)
C
C--FORMAT 10I11
  401   IF(IP.GT.0) WRITE(IOUT,1001) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2001) I,(IA(J,I),J=J1,J2)
 1001   FORMAT(1X,I3,2X,I11,9(1X,I11)/(5X,10(1X,I11)))
 2001   FORMAT(1X,I3,2X,I11,9(1X,I11))
        GO TO 410
C
C--FORMAT 60I1
  402   IF(IP.GT.0) WRITE(IOUT,1002) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2002) I,(IA(J,I),J=J1,J2)
 1002   FORMAT(1X,I3,1X,60(1X,I1)/(5X,60(1X,I1)))
 2002   FORMAT(1X,I3,1X,60(1X,I1))
        GO TO 410
C
C--FORMAT 40I2
  403   IF(IP.GT.0) WRITE(IOUT,1003) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2003) I,(IA(J,I),J=J1,J2)
 1003   FORMAT(1X,I3,1X,40(1X,I2)/(5X,40(1X,I2)))
 2003   FORMAT(1X,I3,1X,40(1X,I2))
        GO TO 410
C
C--FORMAT 30I3
  404   IF(IP.GT.0) WRITE(IOUT,1004) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2004) I,(IA(J,I),J=J1,J2)
 1004   FORMAT(1X,I3,1X,30(1X,I3)/(5X,30(1X,I3)))
 2004   FORMAT(1X,I3,1X,30(1X,I3))
        GO TO 410
C
C--FORMAT 25I4
  405   IF(IP.GT.0) WRITE(IOUT,1005) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2005) I,(IA(J,I),J=J1,J2)
 1005   FORMAT(1X,I3,1X,25(1X,I4)/(5X,25(1X,I4)))
 2005   FORMAT(1X,I3,1X,25(1X,I4))
        GO TO 410
C
C--FORMAT 20I5
  406   IF(IP.GT.0) WRITE(IOUT,1006) I,(IA(J,I),J=J1,J2)
        IF(IP.LT.0) WRITE(IOUT,2006) I,(IA(J,I),J=J1,J2)
 1006   FORMAT(1X,I3,1X,20(1X,I5)/(5X,20(1X,I5)))
 2006   FORMAT(1X,I3,1X,20(1X,I5))
  410 CONTINUE
C
  400 CONTINUE
C
C--RETURN
      RETURN
      END
C
C
      SUBROUTINE RPRINT(BUFF,TEXT,KTRN,KSTP,KPER,NCOL,NROW,
     & ILAY,IPRN,IOUT)
C ****************************************************************
C PRINT A REAL 1 OR 2D ARRAY IN WRAP OR STRIP FORM.
C (Modified from McDonald and Harbaugh, 1988).
C ****************************************************************
C last modified: 14-Oct-1990
C
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
	CHARACTER TEXT*16
      DIMENSION BUFF(NCOL,NROW)

C
C--PRINT A HEADER
      IF(ILAY.LE.0) GO TO 5
      IF(KTRN.GT.0) GO TO 4
      WRITE(IOUT,1) TEXT,ILAY,KSTP,KPER
C--SEAWAT: CHANGING TIME TO TRANSPORT
    1 FORMAT(/35X,A16,' IN LAYER',I3,
     & ' FOR TRANSPORT STEP',I3,', STRESS PERIOD',I3/35X,63('-'))
      GOTO 5
C
    4 WRITE(IOUT,2) TEXT,ILAY,KTRN,KSTP,KPER
C--SEAWAT: CHANGING TIME TO TRANSPORT
    2 FORMAT(/21X,A16,' IN LAYER',I3,' AT END OF TRANSPORT STEP',I5,
     & ', TRANSPORT STEP',I3,', STRESS PERIOD',I3/21X,90('-'))
C
C--MAKE SURE IPRN VALVE IS WITHIN PRINT-FORMAT CODE RANGE
    5 IP=IPRN
      IF(IP.GT.12) IP=12
      IF(IP.LT.-12) IP=-12
      IF(IP.EQ.0) IP=12
C
C--DETERMINE THE NUMBER OF VALUES (NCAP) PRINTED ON ONE LINE,
C--NUMBER OF BLANK SPACES TO LEAVE AT START OF THE LINE (ISP)
C--AND NUMBER OF SPACES IN EACH COLUMN FIELD (NCPF)
      IF(IABS(IP).EQ.1) NCAP=11
      IF(IABS(IP).EQ.2) NCAP=9
      IF(IABS(IP).GT.2 .AND. IABS(IP).LT.7) NCAP=15
      IF(IABS(IP).GT.6 .AND. IABS(IP).LT.12) NCAP=20
      IF(IABS(IP).EQ.12) NCAP=10
      NCPF=129/NCAP
      ISP=0
      IF(NCAP.GT.12) ISP=3
C
C--IF IP>0, ARRAY IS PRINTED IN WRAP FORM
      IF(IP.GT.0.OR.NCOL.LE.NCAP) THEN
        NSTRIP=1
        J1=1
        J2=NCOL
C
C--ELSE IF IP<0, ARRAY IS PRINTED IN STRIP FORM.
C--NUMBER OF STRIPS IS CALCULATED AS [NSTRIP]
      ELSE
        NSTRIP=(NCOL-1)/NCAP + 1
        J1=1-NCAP
        J2=0
      ENDIF
C
C--LOOP THROUGH THE STRIPS
      DO 2000 N=1,NSTRIP
C
C--CALCULATE FIRST(J1) & LAST(J2) COLUMNS FOR THIS STRIP
C--IF STRIP FORM IS USED
      IF(NSTRIP.GT.1) THEN
        J1=J1+NCAP
        J2=J2+NCAP
        IF(J2.GT.NCOL) J2=NCOL
      ENDIF
C
C--PRINT COLUMN NUMBERS ABOVE THE STRIP
      CALL UCOLNO(J1,J2,ISP,NCAP,NCPF,IOUT)
C
C--LOOP THROUGH THE ROWS PRINTING COLS J1 THRU J2 WITH FORMAT IP
      DO 1000 I=1,NROW
      GO TO(10,20,30,40,50,60,70,80,90,100,110,120), IABS(IP)
C
C--FORMAT 11G10.3
   10 IF(IP.GT.0) WRITE(IOUT,11) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,12) I,(BUFF(J,I),J=J1,J2)
   11 FORMAT(1X,I3,2X,1PG10.3,10(1X,G10.3)/(5X,11(1X,G10.3)))
   12 FORMAT(1X,I3,2X,1PG10.3,10(1X,G10.3))
      GO TO 1000
C
C--FORMAT 9G13.6
   20 IF(IP.GT.0) WRITE(IOUT,21) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,22) I,(BUFF(J,I),J=J1,J2)
   21 FORMAT(1X,I3,2X,1PG13.6,8(1X,G13.6)/(5X,9(1X,G13.6)))
   22 FORMAT(1X,I3,2X,1PG13.6,8(1X,G13.6))
      GO TO 1000
C
C--FORMAT 15F7.1
   30 IF(IP.GT.0) WRITE(IOUT,31) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,32) I,(BUFF(J,I),J=J1,J2)
   31 FORMAT(1X,I3,1X,15(1X,F7.1)/(5X,15(1X,F7.1)))
   32 FORMAT(1X,I3,1X,15(1X,F7.1))
      GO TO 1000
C
C--FORMAT 15F7.2
   40 IF(IP.GT.0) WRITE(IOUT,41) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,42) I,(BUFF(J,I),J=J1,J2)
   41 FORMAT(1X,I3,1X,15(1X,F7.2)/(5X,15(1X,F7.2)))
   42 FORMAT(1X,I3,1X,15(1X,F7.2))
      GO TO 1000
C
C--FORMAT 15F7.3
   50 IF(IP.GT.0) WRITE(IOUT,51) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,52) I,(BUFF(J,I),J=J1,J2)
   51 FORMAT(1X,I3,1X,15(1X,F7.3)/(5X,15(1X,F7.3)))
   52 FORMAT(1X,I3,1X,15(1X,F7.3))
      GO TO 1000
C
C--FORMAT 15F7.4
   60 IF(IP.GT.0) WRITE(IOUT,61) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,62) I,(BUFF(J,I),J=J1,J2)
   61 FORMAT(1X,I3,1X,15(1X,F7.4)/(5X,15(1X,F7.4)))
   62 FORMAT(1X,I3,1X,15(1X,F7.4))
      GO TO 1000
C
C--FORMAT 20F5.0
   70 IF(IP.GT.0) WRITE(IOUT,71) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,72) I,(BUFF(J,I),J=J1,J2)
   71 FORMAT(1X,I3,1X,20(1X,F5.0)/(5X,20(1X,F5.0)))
   72 FORMAT(1X,I3,1X,20(1X,F5.0))
      GO TO 1000
C
C--FORMAT 20F5.1
   80 IF(IP.GT.0) WRITE(IOUT,81) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,82) I,(BUFF(J,I),J=J1,J2)
   81 FORMAT(1X,I3,1X,20(1X,F5.1)/(5X,20(1X,F5.1)))
   82 FORMAT(1X,I3,1X,20(1X,F5.1))
      GO TO 1000
C
C--FORMAT 20F5.2
   90 IF(IP.GT.0) WRITE(IOUT,91) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,92) I,(BUFF(J,I),J=J1,J2)
   91 FORMAT(1X,I3,1X,20(1X,F5.2)/(5X,20(1X,F5.2)))
   92 FORMAT(1X,I3,1X,20(1X,F5.2))
      GO TO 1000
C
C--FORMAT 20F5.3
  100 IF(IP.GT.0) WRITE(IOUT,101) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,102) I,(BUFF(J,I),J=J1,J2)
  101 FORMAT(1X,I3,1X,20(1X,F5.3)/(5X,20(1X,F5.3)))
  102 FORMAT(1X,I3,1X,20(1X,F5.3))
      GO TO 1000
C
C--FORMAT 20F5.4
  110 IF(IP.GT.0) WRITE(IOUT,111) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,112) I,(BUFF(J,I),J=J1,J2)
  111 FORMAT(1X,I3,1X,20(1X,F5.4)/(5X,20(1X,F5.4)))
  112 FORMAT(1X,I3,1X,20(1X,F5.4)/(5X,20(1X,F5.4)))
      GO TO 1000
C
C--FORMAT 10G11.4
  120 IF(IP.GT.0) WRITE(IOUT,121) I,(BUFF(J,I),J=J1,J2)
      IF(IP.LT.0) WRITE(IOUT,122) I,(BUFF(J,I),J=J1,J2)
  121 FORMAT(1X,I3,2X,1PG11.4,9(1X,G11.4)/(5X,10(1X,G11.4)))
  122 FORMAT(1X,I3,2X,1PG11.4,9(1X,G11.4))
C
 1000 CONTINUE
 2000 CONTINUE
C
C--RETURN
      RETURN
      END
C
