C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C                                                                      %
C                               SEAWAT                                 %
C                   A Computer Program For Simulation of               %
C          Three-Dimensional Variable-Density Ground-Water Flow        %
C                                                                      %
C                          (Version 2.11)                              %
C                                                                      %
C                           Developed by                               %
C                                                                      %
C                            Weixing Guo                               %
C                           CDM Missmimer                              %
C                     8140 College Parkway, Suite 202                  %
C                        Fort Myers, FL 33919                          %
C                        E-Mail: guow@cdm.com                          %
C                                                                      %
C                               and                                    %
C                                                                      %
C                        Christian Langevin                            %
C                      U.S. Geological Survey                          %
C                   9100 NW 36th Street, Suite 110                     %
C                          Miami FL 33178                              %
C                     E-Mail: langevin@usgs.gov                        %
C                                                                      %
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


C--SEAWAT: MODIFICATIONS
C	LANGEVIN, 01-18-2002	CREATED THE 2.10 VERSION OF THE SEAWAT CODE FROM 
C                             THE BETA VERSION 2.05.
C     LANGEVIN, 08-09-2002    FIXED TWO BUGS THAT CAUSED ERRORS WHEN A MODEL
C                             HAD WETTING AND DRYING.  ONE WAS IN THE SUBROUTINE
C                             SWTDCDT, THE OTHER WAS IN THE CALCULATION OF
C                             RHOCC,RHOCR,AND RHOCV IN SWTFM.

C     This program is public domain and is released on the condition that neither
C     the U.S. Geological Survey nor the United States Government may be held liable 
C     for any damages resulting from their authorized or unauthorized use.

c This version is compiled with Compaq with 'binary' unformatted.
c To recompile with another compiler, the following changes may be required: 
c         (1) ULT1.FOR "file form" statement in L23
c         (2) SSM350.FOR for "advance" in L223
c         (3) Possibly remove dflib and time calls from main program
		

C     *****************************************************************
C     MAIN CODE FOR MODULAR MODEL --
C          BY MICHAEL G. MCDONALD AND ARLEN W. HARBAUGH
C-----VERSION 1638 24JUL1987 MAIN1
C     with BCF2 Package by McDonald et al, 1991 (USGS)
C          PCG2 Package by M.C. Hill, 1990 (USGS)
C          CHD1 Package by S.A. Leake and D.E. Prudic, 1988 (USGS)
C          LKMT Package by C. Zheng, 1992
C          EVT2 Package by E. Swain 1999 (USGS)
C     ...................................................
C     Note: BCF2 implemented on IUNIT (1) replacing BCF1
C           PCG2 implemented on IUNIT (13)
C           CHD1 implemented on IUNIT (20)
C           LKMT implemented on IUNIT (22)
C
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C--THE SEAWAT PROGRAM ALSO INCLUDES:
C                                                                      %
C                               MT3DMS                                 %
C      a modular three-dimensional multi-species transport model       %
C    for simulation of advection, dispersion and chemical reactions    %
C                of contaminants in groundwater systems                %
C                        (Release DoD_3.50.A)                          %
C                                                                      %
C                  For Technical Information Contact                   %
C                           Chunmiao Zheng                             %
C                  Department of Geological Sciences                   %
C                        University of Alabama                         %
C                        Tuscaloosa, AL 35487                          %
C                        E-mail: czheng@ua.edu                         %
C                World-Wide-Web: http://hydro.geo.ua.edu               %
C                                                                      %
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C
C MT3DMS is based on MT3D originally developed by Chunmiao Zheng
C at S.S. Papadopulos & Associates, Inc. and documented for
C the United States Environmental Protection Agency.
C MT3DMS is written by Chunmiao Zheng and P. Patrick Wang
C with the iterative solver routine by Tsun-Zee Mai.
C Funding for MT3DMS development is provided, in part, by
C U.S. Army Corps of Engineers Waterways Experiment Station.
C
C Copyright, 1998-99, The University of Alabama. All rights reserved.
C
C This program is provided without any warranty.
C No author or distributor accepts any responsibility
C to anyone for the consequences of using it
C or for whether it serves any particular purpose.
C The program may be copied, modified and redistributed,
C but ONLY under the condition that the above copyright notice
C and this notice remain intact.
C
C=======================================================================
C

C--SEAWAT: DFLIB ALLOWS RUNTIMES TO BE CALCULATED AT END OF PROGRAM EXECUTION
	USE DFLIB


C--SEAWAT:  TREAT ALL REAL VARIABLES AS DOUBLE PRECISION
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)

C0S1--SEAWAT: SET PARAMETERS
      PARAMETER (LENX=1000000)
      PARAMETER (MXPRS=01000,MXSTP=01000,MXOBS=01000,MXCOMP=100)
      PARAMETER (INUHF=35,inbas=1)
      PARAMETER (IOUT=6,ICNF=40,IOBS=400,IUCN=200,IMAS=600,ICBM=800)
      parameter (inBTN=45, inADV=46, inDSP=47,inSSM=48, inRCT=49,
     +           INGCG=44)

C0S2--SEAWAT: DECLARE PRIMARY ARRAYS AS ALLOCATABLE
	ALLOCATABLE :: X(:),Y(:),Z(:)
	ALLOCATABLE :: IY(:)

	real*4 tim,ta(2)

C0S3--SEAWAT: DECLARATIONS AND COMMON
        LOGICAL DONE,STEPEND
      COMMON   /DENSITY/PF,CONVERSION

C--MODFLOW DECLARATIONS
      CHARACTER*4 HEADNG,VBNM,FLNAME*30,FINDEX*30
      DIMENSION HEADNG(32),VBNM(4,20),VBVL(4,20),IUNIT(24)
	COMMON /FLWCOM/LAYCON(80)

C--MT3D DECLARATIONS AND COMMON
      LOGICAL TRNOP(10),UNIDX,UNIDY,UNIDZ,SAVUCN,SAVCBM,CHKMAS,
     &          FWEL,FDRN,FRCH,FEVT,FRIV,FGHB,PRTOUT,UPDLHS
      CHARACTER TUNIT*4,LUNIT*4,MUNIT*4,FPRT*1
      DIMENSION TIMPRS(MXPRS),TSLNGH(MXSTP),LOCOBS(3,MXOBS),
     &          NCOUNT(MXCOMP),NPINS(MXCOMP),NRC(MXCOMP),
     &          TMASIO(22,2,MXCOMP),RMASIO(22,2,MXCOMP),
     &          TMASS(4,3,MXCOMP),TMASIN(MXCOMP),TMASOT(MXCOMP),
     &          ERROR(MXCOMP),ERROR2(MXCOMP)
      COMMON   /PD/HORIGN,XMAX,YMAX,ZMAX,UNIDX,UNIDY,UNIDZ
      COMMON   /FC/FWEL,FDRN,FRCH,FEVT,FRIV,FGHB
      COMMON   /OC/IFMTCN,IFMTNP,IFMTRF,IFMTDP,SAVUCN,
     &	         SAVCBM, CHKMAS, NPRMAS
      COMMON   /AD/PERCEL,ITRACK,WD,ISEED,DCEPS,NPLANE,NPL,NPH,
     &	         NPMIN,NPMAX,SRMULT,INTERP,NLSINK,NPSINK,DCHMOC
	COMMON	 /GCGIDX/L(19)

C
C1S1--SEAWAT:  WRITE AN IDENTIFIER
      WRITE(*,101)
  101 FORMAT(
     +/1X,'SEAWAT: A COMPUTER PROGRAM FOR SIMULATION OF THREE-'
     +/1X,'  DIMENSIONAL VARIABLE-DENSITY GROUND-WATER FLOW'/
     +/1X,'                        VERSION 2.11'/
     +/1X,'                        August, 2002'//
     +/1X,'                         written by:'/
     +/1X,'                         WEIXING GUO   '
     +/1X,'                        CDM Missimer'/
     +/1X,'                      CHRISTIAN LANGEVIN    '
     +/1X,'                    U.S. Geological Survey  '//
     +/1X,'            **************************************'
     +/1X,' BUILD: 08-09-2002'//
     +/1X,'This program is public domain and is released on the'
     +/1X,'condition that neither the U.S. Geological Survey nor'
     +/1X,'the United States Government may be held liable for any'
     +/1X,'damages resulting from their authorized or unauthorized'
     +/1X,'use.'//)


C
C2------ASSIGN BASIC INPUT UNIT AND PRINTER UNIT.
C2S1--SEAWAT: BASIC INPUT AND UNIT NUMBER SPECIFIED AS PARAMETERS

C
C--OPEN MAIN INPUT & OUTPUT FILES
      FINDEX='SEAWAT Output Listing File: '
      ISTAT=0
      CALL UOPFIL(IOUT,ISTAT,FLNAME,0,FINDEX)
      FINDEX='MODFLOW BAS Input File: '
      ISTAT=1
      CALL UOPFIL(INBAS,ISTAT,FLNAME,0,FINDEX)
C
C3------DEFINE PROBLEM__ROWS,COLUMNS,LAYERS,STRESS PERIODS,PACKAGES
      CALL BAS1DF(ISUMX,HEADNG,NPER,ITMUNI,TOTIM,NCOL,NROW,NLAY,
     1             NODES,INBAS,IOUT,IUNIT)
C
C--OPEN INPUT FILES FOR VARIOUS PACKAGES
      IF(IUNIT(1).GT.0) THEN
        FINDEX='MODFLOW BCF Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(1),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(2).GT.0) THEN
        FINDEX='MODFLOW WEL Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(2),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(3).GT.0) THEN
        FINDEX='MODFLOW DRN Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(3),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(4).GT.0) THEN
        FINDEX='MODFLOW RIV Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(4),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(5).GT.0) THEN
        FINDEX='MODFLOW EVT Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(5),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(7).GT.0) THEN
        FINDEX='MODFLOW GHB Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(7),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(8).GT.0) THEN
        FINDEX='MODFLOW RCH Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(8),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(20).GT.0) THEN
        FINDEX='MODFLOW CHD Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(20),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(9).GT.0) THEN
        FINDEX='MODFLOW SIP Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(9),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(11).GT.0) THEN
        FINDEX='MODFLOW SOR Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(11),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(13).GT.0) THEN
        FINDEX='MODFLOW PCG Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(13),ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IUNIT(12).GT.0) THEN
        FINDEX='MODFLOW OpC Input File: '
        ISTAT=1
        CALL UOPFIL(IUNIT(12),ISTAT,FLNAME,0,FINDEX)
      ENDIF

C3S1--SEAWAT: OPEN MT3D BTN FILE
      FINDEX='MT3DMS BTN Input File:'
      ISTAT=1
      CALL UOPFIL(inBTN,ISTAT,FLNAME,0,FINDEX)
      CALL BTN3DF(INBTN,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,NPER,
     & NCOMP,MCOMP,TRNOP,TUNIT,LUNIT,MUNIT,NODES,MXCOMP)

C3S2--SEAWAT: DEFINE SEAWAT PROBLEM (DENSITY UNITS, PF, CONVERSION)
	CALL SWTDF(ISUMZ,IOUT,TUNIT,LUNIT,MUNIT)

C3S3--SEAWAT: OPEN MT3D PACKAGE FILES
      IF(TRNOP(1)) THEN
                FINDEX='MT3DMS ADV Input File:  '
		ISTAT=1
                CALL UOPFIL(inADV,ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(TRNOP(2)) THEN
                FINDEX='MT3DMS DSP Input File:  '
		ISTAT=1
                CALL UOPFIL(inDSP,ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(TRNOP(3)) then
                FINDEX='MT3DMS SSM Input File: '
		ISTAT=1
                CALL UOPFIL(inSSM,ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(TRNOP(4)) then
                FINDEX='MT3DMS RCT Input File: '
		ISTAT=1
                CALL UOPFIL(inRCT,ISTAT,FLNAME,0,FINDEX)
      ENDIF
	IF(TRNOP(5)) THEN
                FINDEX='MT3DMS GCG Input File: '
		ISTAT=1
                CALL UOPFIL(INGCG,ISTAT,FLNAME,0,FINDEX)
	ENDIF

C3S4--SEAWAT: SET THE MT3D PRINT FLAG TO 'N' 
      fprt='n'

C4------CALCULATE SPACE FOR MODFLOW "X" ARRAY.
      CALL BAS1AL(ISUMX,LENX,LCHNEW,LCHOLD,LCIBOU,LCCR,LCCC,LCCV,
     1	LCHCOF,LCRHS,LCDELR,LCDELC,LCSTRT,LCBUFF,LCIOFL,
     2    INBAS,ISTRT,NCOL,NROW,NLAY,IOUT)
      IF(IUNIT(1).GT.0) CALL BCF2AL(ISUMX,LENX,LCSC1,LCHY,
     1    LCBOT,LCTOP,LCSC2,LCTRPY,IUNIT(1),ISS,
     2    NCOL,NROW,NLAY,IOUT,IBCFCB,LCWETD,IWDFLG,LCCVWD,
     3    WETFCT,IWETIT,IHDWET,HDRY,IWTABLE)
      IF(IUNIT(2).GT.0) CALL WEL1AL(ISUMX,LENX,LCWELL,MXWELL,NWELLS,
     1    IUNIT(2),IOUT,IWELCB)
      IF(IUNIT(3).GT.0) CALL DRN1AL(ISUMX,LENX,LCDRAI,NDRAIN,MXDRN,
     1    IUNIT(3),IOUT,IDRNCB,IDRNELEV)
      IF(IUNIT(8).GT.0) CALL RCH1AL(ISUMX,LENX,LCIRCH,LCRECH,NRCHOP,
     1    NCOL,NROW,IUNIT(8),IOUT,IRCHCB)
C4S1--SEAWAT: USE EVT2 PACKAGE BY SWAIN
      IF(IUNIT(5).GT.0) CALL EVT2AL(ISUMX,LENX,LCIEVT,LCEVTR,LCEXDP,
     1    LCSURF,NCOL,NROW,NEVTOP,IUNIT(5),IOUT,IEVTCB)
      IF(IUNIT(4).GT.0) CALL RIV1AL(ISUMX,LENX,LCRIVR,MXRIVR,NRIVER,
     1    IUNIT(4),IOUT,IRIVCB,IRBDTHK)
      IF(IUNIT(7).GT.0) CALL GHB1AL(ISUMX,LENX,LCBNDS,NBOUND,MXBND,
     1    IUNIT(7),IOUT,IGHBCB,IGHBELEV)
      IF(IUNIT(9).GT.0) CALL SIP1AL(ISUMX,LENX,LCEL,LCFL,LCGL,LCV,
     1    LCHDCG,LCLRCH,LCW,MXITER,NPARM,NCOL,NROW,NLAY,
     2    IUNIT(9),IOUT)
      IF(IUNIT(11).GT.0) CALL SOR1AL(ISUMX,LENX,LCA,LCRES,LCHDCG,LCLRCH,
     1    LCIEQP,MXITER,NCOL,NLAY,NSLICE,MBW,IUNIT(11),IOUT)
      IF(IUNIT(13).GT.0) CALL PCG2AL(ISUMX,LENX,LCV,LCSS,LCP,LCCD,
     1    LCHCHG,LCLHCH,LCRCHG,LCLRCH,MXITER,ITER1,NCOL,NROW,NLAY,
     2    IUNIT(13),IOUT,NPCOND,LCIT1)
      IF(IUNIT(20).GT.0) CALL CHD1AL(ISUMX,LENX,LCCHDS,NCHDS,MXCHD,
     1    IUNIT(20),IOUT,ICHDSALT)

C4S2--SEAWAT: CALCULATE SPACE FOR MT3D "Y" AND "IY" ARRAYS
C4S2--SEAWAT: ADDING LCHTOP TO CONTAIN HTOP ARRAY
      CALL BTN3AL(INBTN,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,NCOMP,
     & LCLAYC,LTDELR,LTDELC,LCHTOP,LCDZ,LCPR,LCXBC,LCYBC,LCZBC,
     & LCQX,LCQY,LCQZ,LCQSTO,LCDH,LCIB,LCCOLD,LCCNEW,LCCWGT,
     & LCCADV,LCRETA,LCSR,LTBUFF)
      CALL FMI3AL(INUHF,IOUT,TRNOP,NPERFL,ISS,IVER)
      IF(TRNOP(1)) CALL ADV3AL(INADV,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,
     & MCOMP,MIXELM,MXPART,PERCEL,NADVFD,LCXP,LCYP,LCZP,
     & LCINDX,LCINDY,LCINDZ,LCCNPT,LCCHEK,TRNOP,NSWTCPL,DNSCRIT)
      IF(TRNOP(2)) CALL DSP3AL(INDSP,IOUT,ISUMY,ISUMIY,
     & NCOL,NROW,NLAY,LCAL,LCTRPT,LCTRPV,LCDM,LCDXX,LCDXY,LCDXZ,
     & LCDYX,LCDYY,LCDYZ,LCDZX,LCDZY,LCDZZ)
      IF(TRNOP(3)) CALL SSM3AL(INSSM,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,
     & NCOMP,LTIRCH,LTRECH,LTCRCH,LTIEVT,LTEVTR,LTCEVT,MXSS,LCSSM,
     & IVER,LCSSMC)
      IF(TRNOP(4)) CALL RCT3AL(INRCT,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,
     & NCOMP,ISOTHM,IREACT,IRCTOP,IGETSC,LCRHOB,LCPRSITY2,LCRETA2,
     & LCFRAC,LCSP1,LCSP2,LCRC1,LCRC2)
      IF(TRNOP(5)) CALL GCG3AL(INGCG,IOUT,ISUMY,ISUMIY,NCOL,NROW,NLAY,
     & MXITERGC,ITER1GC,NCRS,ISOLVE,LCAGC,LCQ,LCWK,LCCNCG,LCLRCHGC,
     & LCRHSGC)
 
C4S3--SEAWAT: CALCULATE SPACE FOR SEAWAT "Z" ARRAY
      CALL SWTAL(IOUT,NCOL,NROW,NLAY,LZELEV,LZPS,LZDCDT,LZRHOCR,LZRHOCC,
     +	LZRHOCV,LZPSOLD,ISUMZ)


C5------ALLOCATE ARRAYS
C5S1--SEAWAT: ALLOCATE ARRAY SPACE
	ALLOCATE(X(ISUMX),Y(0:ISUMY-1),Z(ISUMZ),IY(0:ISUMIY),STAT=IERR)
	IF (IERR.NE.0) THEN
		WRITE(*,*) 'FAILED TO ALLOCATE ENOUGH MEMORY'
                STOP
	END IF

C6------READ AND PREPARE MODFLOW INFORMATION FOR ENTIRE SIMULATION.
      CALL BAS1RP(X(LCIBOU),X(LCHNEW),X(LCSTRT),X(LCHOLD),
     1	ISTRT,INBAS,HEADNG,NCOL,NROW,NLAY,NODES,VBVL,X(LCIOFL),
     2	IUNIT(12),IHEDFM,IDDNFM,IHEDUN,IDDNUN,IOUT)
      IF(IUNIT(1).GT.0) CALL BCF2RP(X(LCIBOU),X(LCHNEW),X(LCSC1),
     1    X(LCHY),X(LCCR),X(LCCC),X(LCCV),X(LCDELR),
     2    X(LCDELC),X(LCBOT),X(LCTOP),X(LCSC2),X(LCTRPY),IUNIT(1),
     3    ISS,NCOL,NROW,NLAY,NODES,IOUT,X(LCWETD),IWDFLG,X(LCCVWD))
      IF(IUNIT(9).GT.0) CALL SIP1RP(NPARM,MXITER,ACCL,HCLOSE,X(LCW),
     1    IUNIT(9),IPCALC,IPRSIP,IOUT)
      IF(IUNIT(11).GT.0) CALL SOR1RP(MXITER,ACCL,HCLOSE,IUNIT(11),
     1    IPRSOR,IOUT)
C6S1--SEAWAT: USE UPDATED PCG2 ROUTINE THAT INCLUDES DAMP FACTOR
      IF(IUNIT(13).GT.0) CALL PCG2RP(MXITER,ITER1,HCLOSE,RCLOSE,
     1    NPCOND,NBPOL,RELAX,IPRPCG,IUNIT(13),IOUT,MUTPCG,
     2    NITER,X(LCIT1),DAMP)

C--OPEN UNFORMATTED FILES
      IF(IHEDUN.GT.0) THEN
		FINDEX='MODFLOW Unformatted Head File: '
		ISTAT=0
		ITMP=-IHEDUN
		CALL UOPFIL(ITMP,ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IDDNUN.GT.0) THEN
		FINDEX='MODFLOW Unformatted Drawdown File: '
		ISTAT=0
		ITMP=-IDDNUN
		CALL UOPFIL(ITMP,ISTAT,FLNAME,0,FINDEX)
      ENDIF
      IF(IBCFCB.GT.0) THEN
		FINDEX='MODFLOW Unformatted Flow File: '
		ISTAT=0
		ITMP=-IBCFCB
		CALL UOPFIL(ITMP,ISTAT,FLNAME,0,FINDEX)
      ENDIF
C6S2--SEAWAT: OPEN MT3D UNFORMATTED HEAD-FLOW LINK FILE
	IF(IUNIT(22).GT.0) THEN
                FINDEX='Standard MT3D Unformatted Link File: '
		ISTAT=0
		ITMP=-IUNIT(22)
		CALL UOPFIL(ITMP,ISTAT,FLNAME,0,FINDEX)
	ENDIF

C6S3--SEAWAT: INITALIZE MT3D VARIABLES
	IMPSOL=0
	IF(TRNOP(5)) THEN
		IMPSOL=1
		ISPD=1
		IF(MIXELM.EQ.0) ISPD=0
	ENDIF

C6S3A--SEAWAT: INITIALIZE MT3D ARRAYS
	DO I=0,ISUMY-1
		Y(I)=0.
	ENDDO
	DO I=0,ISUMIY-1
		IY(I)=0
	ENDDO
      DO I=1,20
		DO INDEX=1,NCOMP
			TMASIO(I,1,INDEX)=0.
			TMASIO(I,2,INDEX)=0.
		ENDDO
      ENDDO

C
C6S4--SEAWAT: READ AND PREPARE MT3D INPUT DATA RELEVANT TO THE ENTIRE SIMULATION
C6S4--USING THE HTOP ARRAY
      CALL BTN3RP(INBTN,IOUT,IUCN,IOBS,IMAS,ICNF,ICBM,NCOL,NROW,NLAY,
     & NCOMP,Iy(LCLAYC),Y(LTDELR),Y(LTDELC),Y(LCHTOP),Y(LCDZ),Y(LCPR),
     & IY(LCIB),Y(LCCOLD),Y(LCCNEW),Y(LCCADV),
     & CINACT,THKMIN,Y(LCXBC),Y(LCYBC),Y(LCZBC),
     & Y(LCRETA),RFMIN,Y(LTBUFF),MXPRS,NPRS,TIMPRS,
     & MXOBS,NOBS,NPROBS,LOCOBS,TUNIT,LUNIT,MUNIT)
      IF(TRNOP(1)) CALL ADV3RP(INADV,IOUT,NCOL,NROW,NLAY,MCOMP,
     & MIXELM,MXPART,NADVFD,NCOUNT)
      IF(TRNOP(2)) CALL DSP3RP(INDSP,IOUT,NCOL,NROW,NLAY,
     & Y(LCAL),Y(LCTRPT),Y(LCTRPV),Y(LCDM))
      IF(TRNOP(4)) CALL RCT3RP(INRCT,IOUT,NCOL,NROW,NLAY,NCOMP,IY(LCIB),
     & Y(LCCOLD),Y(LCPR),ISOTHM,IREACT,IRCTOP,IGETSC,Y(LCRHOB),Y(LCSP1),
     & Y(LCSP2),Y(LCSR),Y(LCRC1),Y(LCRC2),Y(LCRETA),Y(LTBUFF),
     & Y(LCPRSITY2),Y(LCRETA2),Y(LCFRAC),RFMIN,IFMTRF,DTRCT)
      IF(TRNOP(5)) CALL GCG3RP(INGCG,IOUT,MXITERGC,ITER1GC,ISOLVE,
     & ACCLGC,CCLOSE,IPRGCG)
C6S5--SEAWAT: PREPARE THE ELEV ARRAY FOR SEAWAT
	CALL SWTELEV(NCOL,NROW,NLAY,Y(LCHTOP),Y(LCDZ),Z(LZELEV))

C6S6--SEAWAT: PREPARE THE PS ARRAY (FLUID DENSITY ARRAY)
	CALL SWTPS(NCOL,NROW,NLAY,NCOMP,Y(LCCNEW),CINACT,Z(LZPS),IOUT)

C7------SIMULATE EACH STRESS PERIOD

C7S1--SEAWAT: INITIALIZE TIME VARIABLES FOR MT3D
      HT1=0.
      HT2=0.
      NPS=1
C7C2CS1--SEAWAT: SAVE HEADS AND CELL-BY-CELL FLOW TERMS FOR USE IN MT3D
      OPEN(INUHF,FILE='$file.umt',FORM='UNFORMATTED')
C7C2CS2--SEAWAT: INCLUDE FORTRAN SOURCE FOR WRITING UNFORMATTED FLOW FILE
C7C2CS2--SEAWAT: THIS WRITES TO THE TEMPORARY LINK FILE THAT IS RECYCLED EACH STEP
C
      DO 1000 KPER=1,NPER

      KKPER=KPER

C--WRITE AN INDENTIFYING MESSAGE
      WRITE(*,50) KPER
      WRITE(IOUT,51) KPER
      WRITE(IOUT,'(1X)')
   50 FORMAT(/1X,'STRESS PERIOD NO.',I5)
   51 FORMAT(//35X,62('+')/55X,'STRESS PERIOD NO.',I5.3/35X,62('+'))
C
C--GET STRESS TIMING INFORMATION
C7S3--SEAWAT: STRESS TIMING CONTROLLED BY MT3D
      CALL BTN3ST(INBTN,IOUT,NSTP,MXSTP,TSLNGH,DT0,MXSTRN,TTSMULT,
     &     TTSMAX,TUNIT,PERLEN,FIRSTDT)

      CALL BAS1ST(NSTP,TSMULT,PERTIM,KKPER,INBAS,IOUT)

C7S2--SEAWAT: READ THE MT3D SOURCE SINK INFO FOR THIS STRESS PERIOD
      IF(TRNOP(3)) CALL SSM3RP(INSSM,IOUT,KPER,NCOL,NROW,NLAY,NCOMP,
     & IY(LCIB),Y(LCCNEW),Y(LTCRCH),Y(LTCEVT),MXSS,NSS,Y(LCSSM),
     & Y(LCSSMC))
C
C7B-----READ AND PREPARE MODFLOW INFORMATION FOR STRESS PERIOD.
C7BS2--SEAWAT:  INCLUDE SOURCE SINK AND PS ARRAYS IN CALL FOR WEL1RP
      IF(IUNIT(2).GT.0) CALL WEL1RP(X(LCWELL),NWELLS,MXWELL,IUNIT(2),
     1	IOUT,Z(LZPS),MXSS,NSS,Y(LCSSM),NCOL,NROW,NLAY)
      IF(IUNIT(3).GT.0) CALL DRN1RP(X(LCDRAI),NDRAIN,MXDRN,IUNIT(3),
     1	IOUT,IDRNELEV,Z(LZELEV),NCOL,NROW,NLAY)
      IF(IUNIT(8).GT.0) CALL RCH1RP(NRCHOP,X(LCIRCH),X(LCRECH),
     1	X(LCDELR),X(LCDELC),NROW,NCOL,IUNIT(8),IOUT)
      IF(IUNIT(5).GT.0) CALL EVT2RP(NEVTOP,X(LCIEVT),X(LCEVTR),
     1	X(LCEXDP),X(LCSURF),X(LCDELR),X(LCDELC),NCOL,NROW,
     1	IUNIT(5),IOUT)
C7BS3--SEAWAT:  INCLUDE SOURCE SINK ARRAYS IN CALL FOR RIV1RP
      IF(IUNIT(4).GT.0) CALL RIV1RP(X(LCRIVR),NRIVER,MXRIVR,IUNIT(4),
     1	IOUT,MXSS,NSS,Y(LCSSM),IRBDTHK,Z(LZELEV),NCOL,NROW,NLAY)
C7BS4--SEAWAT:  INCLUDE SOURCE SINK ARRAYS IN CALL FOR GHB1RP
      IF(IUNIT(7).GT.0) CALL GHB1RP(X(LCBNDS),NBOUND,MXBND,IUNIT(7),
     1	IOUT,MXSS,NSS,Y(LCSSM),Z(LZELEV),IGHBELEV,NCOL,NROW,NLAY)
      IF(IUNIT(20).GT.0) CALL CHD1RP(X(LCCHDS),NCHDS,MXCHD,X(LCIBOU),
     1    NCOL,NROW,NLAY,PERLEN,NSTP,TSMULT,IUNIT(20),IOUT)

C TIMESTEP LOOP
       DO 900 KSTP=1,NSTP

C7CS2--SEAWAT: CALCULATE MT3D TIME VARIABLES
          delt=tslngh(kstp)
		HT1=HT2
          HT2=HT2+delt
		TIME2=HT1
          kkstp=kstp
C
C7CS3--SEAWAT: WRITE AN IDENTIFYING MESSAGE

      WRITE(*,60) KKPER, KSTP, HT1,HT2
      WRITE(IOUT,61) HT1,HT2
      WRITE(IOUT,'(1X)')
   60 FORMAT(/1X,' STRESS PERIOD ',I4,' TIME STEP ', I4,
     # ' FROM TIME =',G13.5,' TO ',G13.5/)
   61 FORMAT(//42X,48('=')/57X,'FROM TIME =',G13.5,' TO ',G13.5)

C7C3----DETERMINE WHICH OUTPUT OF MODFLOW IS NEEDED.
C7C3S1--SEAWAT: PASSING TRANSPORT STEP (N) INTO BAS1OC 
      CALL BAS1OC(NSTP,KKSTP,ICNVG,X(LCIOFL),NLAY,
     1  IBUDFL,ICBCFL,IHDDFL,IUNIT(12),IOUT)

C7CS4--SEAWAT: SIMULATE EACH TRANSPORT STEP.............................................
      DO 800 N=1,MXSTRN

C7CS12--SEAWAT: ADVANCE ONE TRANSPORT STEP, CALCULATE DTRANS FOR TRANSPORT STEP
C7CS12--SEAWAT: PASSING PERLEN INSTEAD OF DELT
	OLDDTRANS=DTRANS
      CALL BTN3AD(N,TRNOP,TIME1,TIME2,HT2,delt,KSTP,NSTP,
     & MXPRS,TIMPRS,DT0,MXSTRN,MIXELM,DTRACK,DTRACK2,
     & PERCEL,DTDISP,DTSSM,DTRCT,RFMIN,NPRS,NPS,DTRANS,PRTOUT,
     & NCOL,NROW,NLAY,NCOMP,IY(LCIB),Y(LCCNEW),Y(LCCOLD),
     & CINACT,UPDLHS,IMPSOL,TTSMULT,TTSMAX,KPER,Y(LTDELR),Y(LTDELC),
     & Y(LCDH),Y(LCPR),Y(LCSR),Y(LCRHOB),Y(LCRETA),
     & Y(LCPRSITY2),Y(LCRETA2),ISOTHM,TMASIO,RMASIO,TMASS,FIRSTDT)

C7CS13--SEAWAT: CHECK IF SECOND TRANSPORT STEP IS LESS FIRST STEP
      IF(ISS.EQ.0.AND.N.EQ.2.AND.NSWTCPL.LE.1.AND.DTRANS.LE.OLDDTRANS.
     +   AND.KPER.EQ.1)
     + WRITE(*,*) ' WARNING: FIRST TIME STEP MAY BE TOO LARGE: REDUCE
     + FIRSTDT'


C--SEAWAT: WRITE MESSAGE TO SCREEN
	WRITE(*,1250) N,DTRANS,TIME2	
 1250 FORMAT(' TRANSPORT STEP: ',I8,2X,'DTRANS: ',1PG10.3,2X,
     &       ' ELPSD: ',1PG10.3)

C7C1--SET HOLD=HNEW AND CALCULATE PERTIM
C7C1S1--SEAWAT: PASSING DTRANS FOR PERTIM AND TOTIM CALCULATION
      CALL BAS1AD(DTRANS,TSMULT,TOTIM,PERTIM,X(LCHNEW),X(LCHOLD),KKSTP,
     1             NCOL,NROW,NLAY)
      IF(IUNIT(20).GT.0) CALL CHD1FM(NCHDS,MXCHD,X(LCCHDS),X(LCIBOU),
     1      X(LCHNEW),X(LCHOLD),PERLEN,PERTIM,DELT,
     2      NCOL,NROW,NLAY,ICHDSALT,Z(LZPS),Z(LZELEV))
      IF(IUNIT(1).GT.0) CALL BCF2AD(X(LCIBOU),X(LCHOLD),X(LCBOT),
     1             X(LCWETD),IWDFLG,ISS,NCOL,NROW,NLAY)

C********************************************************************
C******************FOR IMPLICIT COUPLING*****************************

	DO M=1,NSWTCPL
	IF (NSWTCPL.GT.1) THEN
		PRINT *
		PRINT *,'IMPLICIT COUPLING ITERATION ',M
		PRINT *
C		SET OLD DENSITY ARRAY (PSOLD) EQUAL TO NEW DENSITY ARRAY (PS)
		DO I=1,NODES
			Z(LZPSOLD+I-1)=Z(LZPS+I-1)
		ENDDO
	ENDIF

C******************FOR IMPLICIT COUPLING*****************************
C********************************************************************

C7C2----ITERATIVELY FORMULATE AND SOLVE THE EQUATIONS.
      DO 100 KITER=1,MXITER
      KKITER=KITER
C
C7C2A---FORMULATE THE FINITE DIFFERENCE EQUATIONS.
      CALL BAS1FM(X(LCHCOF),X(LCRHS),NODES)
C7C2AS1--SEAWAT: 
      IF(IUNIT(1).GT.0) CALL BCF2FM(X(LCHCOF),X(LCRHS),X(LCHOLD),
     1	X(LCSC1),X(LCHNEW),X(LCIBOU),X(LCCR),X(LCCC),X(LCCV),
     2    X(LCHY),X(LCTRPY),X(LCBOT),X(LCTOP),X(LCSC2),
     3    X(LCDELR),X(LCDELC),dtrans,ISS,KKITER,KKSTP,KKPER,NCOL,!passing dtrans for delt
     4    NROW,NLAY,IOUT,X(LCWETD),IWDFLG,X(LCCVWD),WETFCT,
     5    IWETIT,IHDWET,HDRY,Z(LZPS),Z(LZELEV))
C7C2AS2--SEAWAT: CHANGE IN SUBROUTINE TO HANDLE VARIABLE DENSITY SOURCE/SINK
      IF(IUNIT(2).GT.0) CALL WEL1FM(NWELLS,MXWELL,X(LCRHS),X(LCWELL),
     1    X(LCIBOU),NCOL,NROW,NLAY,Z(LZPS))
C7C2AS3--SEAWAT: PASSING PS AND ELEV
      IF(IUNIT(3).GT.0) CALL DRN1FM(NDRAIN,MXDRN,X(LCDRAI),X(LCHNEW),
     1    X(LCHCOF),X(LCRHS),X(LCIBOU),NCOL,NROW,NLAY,Z(LZPS),Z(LZELEV))
C7C2AS4--SEAWAT: PASSING IN RECHARGE CONCENTRATION
      IF(IUNIT(8).GT.0) CALL RCH1FM(NRCHOP,X(LCIRCH),X(LCRECH),
     1    X(LCRHS),X(LCIBOU),NCOL,NROW,NLAY,NCOMP,Z(LZPS),Y(LTCRCH))
C7C2AS5--SEAWAT: PASSING PS, ELEV, AND EVT CONCENTRATION
      IF(IUNIT(5).GT.0) CALL EVT2FM(NEVTOP,X(LCIEVT),X(LCEVTR),
     1    X(LCEXDP),X(LCSURF),X(LCRHS),X(LCHCOF),X(LCIBOU),
     1    X(LCHNEW),NCOL,NROW,NLAY,NCOMP,Z(LZPS),Z(LZELEV),Y(LTCEVT))
C7C2AS6--SEAWAT: PASSING PS AND ELEV
      IF(IUNIT(4).GT.0) CALL RIV1FM(NRIVER,MXRIVR,X(LCRIVR),X(LCHNEW),
     1    X(LCHCOF),X(LCRHS),X(LCIBOU),NCOL,NROW,NLAY,Z(LZPS),Z(LZELEV))
C7C2AS7--SEAWAT: PASSING PS AND HNEW (HNEW PASSED TO DETERMINE UPSTREAM DIRECTION)
      IF(IUNIT(7).GT.0) CALL GHB1FM(NBOUND,MXBND,X(LCBNDS),X(LCHCOF),
     1    X(LCRHS),X(LCIBOU),NCOL,NROW,NLAY,Z(LZPS),Z(LZELEV),X(LCHNEW))
C7C2AS8--SEAWAT: ADD TO RHS DENSITY TERM AND MULTIPLY CONDUCTANCES BY UPSTREAM DENSITIES
	IF(IUNIT(1).GT.0) CALL SWTFM(X(LCCR),X(LCCC),X(LCCV),
     1	X(LCHNEW),X(LCIBOU),Z(LZRHOCR),Z(LZRHOCC),Z(LZRHOCV),
     2    Z(LZPS),Z(LZELEV),NCOL,NROW,NLAY,X(LCRHS),Z(LZDCDT),X(LCTOP),
     3    X(LCBOT),IWTABLE)
C
C7C2B---MAKE ONE CUT AT AN APPROXIMATE SOLUTION.
C7C2BS1	  RHOCC,RHOCR,AND RHOCV ARE PASSED TO CONSERVE FLUID MASS
      IF(IUNIT(9).GT.0) CALL SIP1AP(X(LCHNEW),X(LCIBOU),Z(LZRHOCR),
     1	Z(LZRHOCC),Z(LZRHOCV),X(LCHCOF),X(LCRHS),X(LCEL),X(LCFL),
     2    X(LCGL),X(LCV),X(LCW),X(LCHDCG),X(LCLRCH),NPARM,KKITER,
     3    HCLOSE,ACCL,ICNVG,KKSTP,KKPER,IPCALC,IPRSIP,MXITER,NSTP,
     4    NCOL,NROW,NLAY,NODES,IOUT)
C7C2BS2	  RHOCC,RHOCR,AND RHOCV ARE PASSED TO CONSERVE FLUID MASS
      IF(IUNIT(11).GT.0) CALL SOR1AP(X(LCHNEW),X(LCIBOU),Z(LZRHOCR),
     1    Z(LZRHOCC),Z(LZRHOCV),X(LCHCOF),X(LCRHS),X(LCA),X(LCRES),
     2    X(LCIEQP),X(LCHDCG),X(LCLRCH),KKITER,HCLOSE,ACCL,ICNVG,KKSTP,
     3    KKPER,IPRSOR,MXITER,NSTP,NCOL,NROW,NLAY,NSLICE,MBW,IOUT)
C7C2BS3	  RHOCC,RHOCR,AND RHOCV ARE PASSED TO CONSERVE FLUID MASS
      IF(IUNIT(13).GT.0) CALL PCG2AP(X(LCHNEW),X(LCIBOU),Z(LZRHOCR),
     1    Z(LZRHOCC),Z(LZRHOCV),X(LCHCOF),X(LCRHS),X(LCV),X(LCSS),
     2    X(LCP),X(LCCD),X(LCHCHG),X(LCLHCH),X(LCRCHG),X(LCLRCH),
     3    KKITER,NITER,HCLOSE,RCLOSE,ICNVG,KKSTP,KKPER,IPRPCG,MXITER,
     4    ITER1,NPCOND,NBPOL,NSTP,NCOL,NROW,NLAY,NODES,RELAX,IOUT,
     5    MUTPCG,0,0,SN,SP,SR,X(LCIT1),DAMP)

C7C2C---IF CONVERGENCE CRITERION HAS BEEN MET STOP ITERATING.
      IF(ICNVG.EQ.1) GO TO 110  
  100 CONTINUE
      KITER=MXITER
  110 CONTINUE

	IMT3D=INUHF
        INCLUDE 'LKMT2.INC'
        REWIND(IMT3D)
cwxg        KKSTP=KSTP   !resume KKSTP

      IF(ICNVG.EQ.0) THEN
		WRITE(IOUT,750) N,KPER
		STOP
  750		FORMAT(/1X,'FAILED TO CONVERGE DURING TRANSPORT STEP',I5,
     +		' IN STRESS PERIOD ',I5)
	ENDIF

C7CS7--SEAWAT: OPEN THE SEAWAT TEMPORARY FILE THAT CONTAINS ADVECTIVE FLUXES
c        OPEN(INUHF,FILE='$file.umt',FORM='UNFORMATTED')
C7CS8--SEAWAT: READ ADVECTIVE FLUXES OUT OF TEMPORARY FILE
	CALL FMI3RP1(INUHF,IOUT,KPER,KSTP,NCOL,NROW,NLAY,NCOMP,FPRT,
     & IY(LCLAYC),IY(LCIB),HORIGN,Y(LCDH),Y(LCPR),Y(LTDELR),Y(LTDELC),
     & Y(LCDZ),Y(LCXBC),Y(LCYBC),Y(LCZBC),Y(LCQSTO),Y(LCCOLD),
     & Y(LCCNEW),Y(LCRETA),Y(LCQX),Y(LCQY),Y(LCQZ),
     & DTRACK,DTRACK2,THKMIN,ISS,IVER)

C7CS9--SEAWAT: READ SOURCE/SINK INFO OUT OF TEMPORARY FILE
	IF(TRNOP(3)) CALL FMI3RP2(INUHF,IOUT,KPER,KSTP,NCOL,NROW,NLAY,
     & NCOMP,FPRT,IY(LCLAYC),IY(LCIB),Y(LCDH),Y(LCPR),Y(LTDELR),
     & Y(LTDELC),IY(LTIRCH),Y(LTRECH),IY(LTIEVT),Y(LTEVTR),
     & MXSS,NSS,NTSS,Y(LCSSM),Y(LTBUFF),DTSSM)

C7CS10--SEAWAT: CALCULATE COEFFICIENTS THAT ARE CONSTANT WITHIN EACH TIME STEP
	IF(TRNOP(2)) CALL DSP3CF(IOUT,KSTP,KPER,NCOL,NROW,NLAY,
     & IY(LCIB),Y(LCPR),Y(LTDELR),Y(LTDELC),Y(LCDH),
     & Y(LCQX),Y(LCQY),Y(LCQZ),Y(LCAL),Y(LCTRPT),Y(LCTRPV),Y(LCDM),
     & DTDISP,Y(LCDXX),Y(LCDXY),Y(LCDXZ),
     & Y(LCDYX),Y(LCDYY),Y(LCDYZ),Y(LCDZX),Y(LCDZY),Y(LCDZZ),IFMTDP)

C7CS11--SEAWAT: REWIND THE TEMPORARY FILE FOR FUTURE USE
        REWIND(inuhf)
C
C--FOR EACH COMPONENT......
      DO ICOMP=1,NCOMP
C
C--SOLVE TRANSPORT TERMS WITH EXPLICIT SCHEMES
      IF(IMPSOL.EQ.1 .AND. MIXELM.EQ.0) GOTO 1500
C
C7CS14--SEAWAT: FORMULATE AND SOLVE TRANSPORT EQUATION
      CALL BTN3SV(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),Y(LCCNEW),
     & Y(LCCWGT),CINACT,RMASIO)

      IF(TRNOP(1) .AND. ICOMP.LE.MCOMP)
     & CALL ADV3SV(IOUT,NCOL,NROW,NLAY,MCOMP,ICOMP,MIXELM,MXPART,
     & NCOUNT,NPINS,NRC,IY(LCCHEK),Y(LCXP),Y(LCYP),Y(LCZP),
     & IY(LCINDX),IY(LCINDY),IY(LCINDZ),Y(LCCNPT),IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDZ),Y(LCXBC),Y(LCYBC),Y(LCZBC),Y(LCDH),
     & Y(LCPR),Y(LCQX),Y(LCQY),Y(LCQZ),Y(LCRETA),Y(LCCOLD),Y(LCCWGT),
     & Y(LCCNEW),Y(LCCADV),Y(LTBUFF),DTRANS,IMPSOL,NADVFD,RMASIO)
C
      IF(IMPSOL.EQ.1) GOTO 1500
C
      IF(TRNOP(2) .AND. ICOMP.LE.MCOMP)
     & CALL DSP3SV(NCOL,NROW,NLAY,MCOMP,ICOMP,IY(LCIB),Y(LTDELR),
     & Y(LTDELC),Y(LCDH),Y(LCRETA),Y(LCPR),Y(LCDXX),Y(LCDXY),Y(LCDXZ),
     & Y(LCDYX),Y(LCDYY),Y(LCDYZ),Y(LCDZX),Y(LCDZY),Y(LCDZZ),
     & Y(LCCNEW),Y(LCCWGT),Y(LTBUFF),DTRANS,RMASIO)
C
      IF(TRNOP(3) .AND. ICOMP.LE.MCOMP)
     & CALL SSM3SV(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),Y(LCPR),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCRETA),IY(LTIRCH),Y(LTRECH),
     & Y(LTCRCH),IY(LTIEVT),Y(LTEVTR),Y(LTCEVT),MXSS,NTSS,NSS,
     & Y(LCSSM),Y(LCSSMC),Y(LCQSTO),Y(LCCNEW),Y(LCCWGT),
     & DTRANS,MIXELM,ISS,RMASIO)
C
      IF(TRNOP(4))
     & CALL RCT3SV(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),Y(LCPR),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCRETA),RFMIN,DTRANS,ISOTHM,
     & IREACT,Y(LCRHOB),Y(LCSP1),Y(LCSP2),Y(LCSR),Y(LCRC1),
     & Y(LCRC2),Y(LCPRSITY2),Y(LCRETA2),
     & Y(LCFRAC),Y(LCCNEW),Y(LCCWGT),RMASIO)

      GOTO 220
 1500 CONTINUE

C
C--SOLVE TRANSPORT TERMS WITH IMPLICIT SCHEMES
      IF(DTRANS.EQ.0) THEN
        ICNVG=1
        GOTO 220
      ENDIF
C
C--ALWAYS UPDATE MATRIX IF NONLINEAR SORPTION OR MULTICOMPONENT
      IF(TRNOP(4).AND.ISOTHM.GT.1) THEN
        UPDLHS=.TRUE.
      ENDIF
      IF(NCOMP.GT.1) UPDLHS=.TRUE.
C
C--FOR EACH OUTER ITERATION...
      DO ITO=1,MXITERGC
C
C--UPDATE COEFFICIENTS THAT VARY WITH ITERATIONS
      IF(TRNOP(4).AND.ISOTHM.GT.1)
     & CALL RCT3CF(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),
     & Y(LCPR),Y(LCCNEW),Y(LCRETA),RFMIN,Y(LCRHOB),Y(LCSP1),
     & Y(LCSP2),Y(LCRC1),Y(LCRC2),Y(LCPRSITY2),Y(LCRETA2),
     & Y(LCFRAC),Y(LCSR),ISOTHM,IREACT,DTRANS)
C
C--FORMULATE MATRIX COEFFICIENTS
      CALL BTN3FM(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),Y(LCCADV),
     & Y(LCCOLD),Y(LCRETA),Y(LCPR),Y(LTDELR),Y(LTDELC),Y(LCDH),DTRANS,
     & Y(LCAGC),Y(LCRHSGC),NODES,UPDLHS,NCRS,MIXELM)

      IF(TRNOP(1).AND.MIXELM.EQ.0 .AND. ICOMP.LE.MCOMP)
     & CALL ADV3FM(NCOL,NROW,NLAY,MCOMP,ICOMP,IY(LCIB),Y(LTDELR),
     & Y(LTDELC),Y(LCDH),Y(LCQX),Y(LCQY),Y(LCQZ),NADVFD,NODES,
     & Y(LCAGC),UPDLHS)
C
      IF(TRNOP(2) .AND. ICOMP.LE.MCOMP)
     & CALL DSP3FM(NCOL,NROW,NLAY,MCOMP,ICOMP,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCDXX),Y(LCDXY),Y(LCDXZ),Y(LCDYX),
     & Y(LCDYY),Y(LCDYZ),Y(LCDZX),Y(LCDZY),Y(LCDZZ),
     & Y(LCAGC),NODES,UPDLHS,Y(LCCNEW),Y(LCRHSGC),NCRS)
C
      IF(TRNOP(3) .AND. ICOMP.LE.MCOMP)
     & CALL SSM3FM(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),IY(LTIRCH),Y(LTRECH),Y(LTCRCH),
     & IY(LTIEVT),Y(LTEVTR),Y(LTCEVT),MXSS,NTSS,Y(LCSSM),Y(LCSSMC),
     & Y(LCQSTO),Y(LCCNEW),ISS,Y(LCAGC),Y(LCRHSGC),NODES,UPDLHS,MIXELM)
C
      IF(TRNOP(4)) CALL RCT3FM(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),
     & Y(LCPR),Y(LTDELR),Y(LTDELC),Y(LCDH),ISOTHM,IREACT,
     & Y(LCRHOB),Y(LCSP1),Y(LCSP2),Y(LCSR),Y(LCRC1),Y(LCRC2),
     & Y(LCPRSITY2),Y(LCRETA2),Y(LCFRAC),Y(LCAGC),Y(LCRHSGC),
     & NODES,UPDLHS,DTRANS)
C
      CALL GCG3AP(IOUT,MXITERGC,ITER1GC,ITO,ITP,ISOLVE,ACCLGC,CCLOSE,
     & ICNVG,Y(LCCNCG),IY(LCLRCHGC),NCOL,NROW,NLAY,NODES,N,KSTP,KPER,
     & TIME2,HT2,UPDLHS,IPRGCG,IY(LCIB+(ICOMP-1)*NODES),CINACT,Y(LCAGC),
     & Y(LCCNEW+(ICOMP-1)*NODES),Y(LCRHSGC),Y(LCQ),Y(LCWK),NCRS,ISPD)
C
C--IF CONVERGED, GO TO NEXT OUTER ITERATION
      IF(ICNVG.EQ.1) GOTO 220

C
C--END OF OUTER ITERATION LOOP
      ENDDO
C
  220 CONTINUE
C

C--END OF COMPONENT LOOP
      ENDDO

C7CS17--SEAWAT: RECALCULATE DENSITY
	CALL SWTPS(NCOL,NROW,NLAY,NCOMP,Y(LCCNEW),CINACT,
     +           Z(LZPS),IOUT)

C7CS18--SEAWAT: RECALCULATE DCTDT TERM
	CALL SWTDCDT(NCOL,NROW,NLAY,NCOMP,Y(LCCOLD),
     +  Y(LCCNEW),Y(LCPR),Y(LTDELR),Y(LTDELC),Y(LCDH),Z(LZDCDT),DTRANS,
     +  CINACT)

C********************************************************************
C******************FOR IMPLICIT COUPLING*****************************
	DONE=.TRUE.
	IF (NSWTCPL.GT.1) 
     &   CALL SWTCOUPL(NCOL,NROW,NLAY,M,Z(LZPSOLD),Z(LZPS),DONE,DNSCRIT)


	IF (DONE) GOTO 1900
	ENDDO

	PRINT *,'MAX COUPLING ITERATIONS EXCEEDED: STOPPING '
	STOP
	
 1900 CONTINUE

C******************FOR IMPLICIT COUPLING*****************************
C********************************************************************


C7C2CS4--SEAWAT: DETERMINE IF THEN END OF A MODFLOW TIMESTEP
        STEPEND=.FALSE.
        IF (TIME2.GE.HT2) STEPEND=.TRUE.

C7C4----CALCULATE MODFLOW BUDGET TERMS. SAVE CELL-BY-CELL FLOW TERMS.
      MSUM=1
C7C4S1--SEAWAT: ELEV, PS,  PRTOUT
C7C4S1--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(1).GT.0) CALL BCF1BD(VBNM,VBVL,MSUM,X(LCHNEW),
     1     X(LCIBOU),X(LCHOLD),X(LCSC1),X(LCCR),X(LCCC),X(LCCV),
     2     X(LCTOP),X(LCSC2),dtrans,ISS,NCOL,NROW,NLAY,n,kstp,KKPER,    
     3    IBCFCB,ICBCFL,X(LCBUFF),IOUT,Z(LZPS),Z(LZELEV),PRTOUT,STEPEND,
     4    X(LCBOT))

C7C4S2--SEAWAT: PASSSING PS, PRTOUT
C7C4S2--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(2).GT.0) CALL WEL1BD(NWELLS,MXWELL,VBNM,VBVL,MSUM,
     1    X(LCWELL),X(LCIBOU),dtrans,NCOL,NROW,NLAY,N,kstp,KKPER,IWELCB,
     1    ICBCFL,X(LCBUFF),IOUT,PRTOUT,STEPEND,Z(LZPS))

C7C4S3--SEAWAT: PASSSING PS, ELEV, PRTOUT
C7C4S3--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(3).GT.0) CALL DRN1BD(NDRAIN,MXDRN,VBNM,VBVL,MSUM,
     1     X(LCDRAI),dtrans,X(LCHNEW),NCOL,NROW,NLAY,X(LCIBOU),N,kstp,  
     2     KKPER,IDRNCB,ICBCFL,X(LCBUFF),IOUT,Z(LZPS),Z(LZELEV),PRTOUT,
     3     STEPEND)

C7C4S4--SEAWAT: PASSSING PS, RECH CONC, PRTOUT
C7C4S4--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(8).GT.0) CALL RCH1BD(NRCHOP,X(LCIRCH),X(LCRECH),
     1     X(LCIBOU),NROW,NCOL,NLAY,NCOMP,dtrans,VBVL,VBNM,MSUM,N,kstp, 
     2     KKPER,IRCHCB,ICBCFL,X(LCBUFF),IOUT,Z(LZPS),Y(LTCRCH),PRTOUT,
     3     STEPEND)

C7C4S5--SEAWAT: PASSSING PS, ELEV, EVT CONC, PRTOUT
C7C4S5--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(5).GT.0) CALL EVT2BD(NEVTOP,X(LCIEVT),X(LCEVTR),
     1     X(LCEXDP),X(LCSURF),X(LCIBOU),X(LCHNEW),NCOL,NROW,NLAY,NCOMP,
     2  dtrans,VBVL,VBNM,MSUM,N,kstp,KKPER,IEVTCB,ICBCFL,X(LCBUFF),IOUT,
     3   Z(LZPS),Z(LZELEV),Y(LTCEVT),PRTOUT,STEPEND)

C7C4S6--SEAWAT: PASSSING PS, ELEV, PRTOUT
C7C4S6--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(4).GT.0) CALL RIV1BD(NRIVER,MXRIVR,X(LCRIVR),X(LCIBOU),
     1     X(LCHNEW),NCOL,NROW,NLAY,dtrans,VBVL,VBNM,MSUM,              
     2     N,kstp,KKPER,IRIVCB,ICBCFL,X(LCBUFF),IOUT,
     3     Z(LZPS),Z(LZELEV),PRTOUT,STEPEND)

C7C4S7--SEAWAT: PASSSING PS, PRTOUT
C7C4S7--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
      IF(IUNIT(7).GT.0) CALL GHB1BD(NBOUND,MXBND,VBNM,VBVL,MSUM,
     1     X(LCBNDS),dtrans,X(LCHNEW),NCOL,NROW,NLAY,X(LCIBOU),N,kstp,
     2     KKPER,IGHBCB,ICBCFL,X(LCBUFF),IOUT,Z(LZPS),Z(LZELEV),
     3     PRTOUT,STEPEND)

C7C4S8--SEAWAT: CALL THE SEAWAT BUDGET ROUTINE TO SUM DCDT TERMS
C7C4S8--SEAWAT: PASSING N (TRANSPORT STEP) INSTEAD OF KKSTP
       CALL SWTBD(VBNM,VBVL,MSUM,X(LCIBOU),dtrans,NCOL,NROW,NLAY,N,kstp,
     +	 KKPER,IBCFCB,ICBCFL,X(LCBUFF),IOUT,Z(LZPS),Z(LZDCDT),PRTOUT,
     +     STEPEND)

C7C5---PRINT AND OR SAVE HEADS AND DRAWDOWNS. PRINT OVERALL BUDGET.
C7C5S1--SEAWAT: PASSING PRTOUT AND TRANSPORT STEP INSTEAD OF KSTP
      CALL BAS1OT(X(LCHNEW),X(LCSTRT),ISTRT,X(LCBUFF),X(LCIOFL),
     1     MSUM,X(LCIBOU),VBNM,VBVL,N,kstp,KKPER,DELT,
     2     PERTIM,TOTIM,ITMUNI,NCOL,NROW,NLAY,ICNVG,
     3    IHDDFL,IBUDFL,IHEDFM,IHEDUN,IDDNFM,IDDNUN,IOUT,PRTOUT,STEPEND,
     4    dtrans)

C
C--CALCULATE MASS BUDGETS AND SAVE RESULTS FOR ALL COMPONENTS
      DO ICOMP=1,NCOMP
C
C--CALCULATE MASS BUDGETS FOR IMPLICIT SCHEMES
C
      IF(IMPSOL.NE.1) GOTO 2000
C
      IF(TRNOP(1).AND.MIXELM.EQ.0 .AND. ICOMP.LE.MCOMP)
     & CALL ADV3BD(IOUT,NCOL,NROW,NLAY,MCOMP,ICOMP,NADVFD,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCQX),Y(LCQY),Y(LCQZ),Y(LCCNEW),
     & DTRANS,RMASIO)
C
      IF(TRNOP(2) .AND. ICOMP.LE.MCOMP)
     & CALL DSP3BD(NCOL,NROW,NLAY,MCOMP,ICOMP,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCDXX),Y(LCDXY),Y(LCDXZ),
     & Y(LCDYX),Y(LCDYY),Y(LCDYZ),Y(LCDZX),Y(LCDZY),Y(LCDZZ),
     & Y(LCCNEW),Y(LTBUFF),DTRANS,RMASIO)
C
      IF(TRNOP(3) .AND. ICOMP.LE.MCOMP)
     & CALL SSM3BD(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),IY(LTIRCH),Y(LTRECH),
     & Y(LTCRCH),IY(LTIEVT),Y(LTEVTR),Y(LTCEVT),MXSS,NTSS,
     & Y(LCSSM),Y(LCSSMC),Y(LCQSTO),Y(LCCNEW),Y(LCRETA),
     & DTRANS,ISS,RMASIO)
C
      IF(TRNOP(4)) CALL RCT3BD(NCOL,NROW,NLAY,NCOMP,ICOMP,IY(LCIB),
     & Y(LCPR),Y(LTDELR),Y(LTDELC),Y(LCDH),DTRANS,ISOTHM,IREACT,
     & Y(LCRHOB),Y(LCSP1),Y(LCSP2),Y(LCSR),Y(LCRC1),Y(LCRC2),
     & Y(LCPRSITY2),Y(LCRETA2),Y(LCFRAC),Y(LCCNEW),Y(LCRETA),
     & RFMIN,RMASIO)
C
 2000 CONTINUE
C
C7CS15--SEAWAT: CALCULATE GLOBAL MASS BUDGETS AND CHECK MASS BALANCE
      CALL BTN3BD(KPER,KSTP,N,NCOL,NROW,NLAY,NCOMP,ICOMP,ISS,IY(LCIB),
     & Y(LTDELR),Y(LTDELC),Y(LCDH),Y(LCPR),Y(LCRETA),Y(LCCNEW),
     & Y(LCCOLD),Y(LCRHOB),Y(LCSR),Y(LCPRSITY2),Y(LCRETA2),ISOTHM,
     & DTRANS,TMASIN,TMASOT,ERROR,ERROR2,TMASIO,RMASIO,TMASS)
C
C7CS16--SEAWAT: SAVE OUTPUTS
      CALL BTN3OT(NCOL,NROW,NLAY,KPER,KSTP,N,NCOMP,ICOMP,IOUT,IOBS,
     & IUCN,IMAS,ICBM,MXOBS,NOBS,NPROBS,LOCOBS,IY(LCIB),TIME2,Y(LCCNEW),
     & MIXELM,NCOUNT,NPINS,NRC,IY(LCCHEK),ISOTHM,Y(LCRETA),TMASIN,
     & TMASOT,ERROR,ERROR2,TRNOP,TUNIT,MUNIT,PRTOUT,TMASIO,RMASIO,TMASS)
C
      ENDDO
C
      IF(IMPSOL.EQ.1.AND.ICNVG.EQ.0) THEN
        WRITE(*,*) 'STOP. GCG SOLVER FAILED TO CONVERGE.'
        STOP
      ENDIF

C7C4S9--SEAWAT: IF TIME2.GT.HT2, STRESS PERIOD IS DONE
      IF(TIME2.GE.HT2) GOTO 950

C7C4S10--SEAWAT: END OF MT3D TRANSPORT STEP  
  800 CONTINUE

C7C4S11--SEAWAT: IF TIME2.LT.HT2 THEN MAXIMUM NUMBER OF TRANSPORT STEPS EXCEEDED
      IF(TIME2.LT.HT2) THEN
        WRITE(IOUT,810) MXSTRN
        WRITE(*,810) MXSTRN
  810   FORMAT(/1X,'NUMBER OF TRANSPORT STEPS EXCEEDS',
     &   ' SPECIFIED MAXIMUM (MXSTRN) =',I10)
        STOP
      ENDIF

C7C4S12--SEAWAT: ENTRY POINT FOR END OF STRESS PERIOD
950   CONTINUE

C7C5S2--SEAWAT: INCLUDE 'LKMT2.INC' FOR WRITING THE FLOW LINK FILE
C7C5S2--SEAWAT:  THIS CREATES THE STANDARD MT3D LINK FILE FOR SUBSEQUENT MT3D RUN
C7C5S3--SEAWAT: SAVE RECORDS AT EVERY TIME STEP
      IF(STEPEND) IMT3D=IUNIT(22)
      INCLUDE 'LKMT2.INC'

  900 CONTINUE !END OF TIME STEP
C--SEAWAT: END OF STRESS PERIOD LOOP
 1000 CONTINUE

      CLOSE(INUHF)

C
C--PROGRAM COMPLETED
      WRITE(IOUT,1200)
      WRITE(IOUT,1225)
      WRITE(IOUT,1200)
 1200 FORMAT(1X,' -----------------------------')
 1225 FORMAT(1X,'| SEAWAT--Normal Termination |')

C

	tim = DTIME(TA)
	write(*,*) 'Program has been running for', tim, 'seconds.'
	write(*,*) ' This includes', TA(1), 'seconds of user time and',
     & TA(2), 'seconds of system time.'


C8------END PROGRAM
      STOP
C
      END

