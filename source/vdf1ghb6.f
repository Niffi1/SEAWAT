
      SUBROUTINE VDF1GHB6FM(NBOUND,MXBND,BNDS,HCOF,RHS,IBOUND,
     1              NCOL,NROW,NLAY,NGHBVL,HNEW,
     2              MXSS,NSS,SS,NCOMP,SSMC,NSSVL)
C
C-----VERSION 11JAN2000 GWF1GHB6FM
C     ******************************************************************
C     ADD GHB TERMS TO RHS AND HCOF
C--SEAWAT: USE VARIABLE-DENSITY FORM OF DARCY'S LAW
C     ******************************************************************
C
C     SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE VDFMODULE,   ONLY: MT3DRHOFLG,DENSEREF,PS,ELEV
C
      DIMENSION BNDS(NGHBVL,MXBND),HCOF(NCOL,NROW,NLAY),
     1         RHS(NCOL,NROW,NLAY),IBOUND(NCOL,NROW,NLAY)
C--SEAWAT: MAKE HB, AND HHB DOUBLE PRECISION SO FEHEAD CAN BE USED
      DOUBLE PRECISION HNEW,HB
C--SEAWAT: DIMENSION ADDITIONAL ARRAYS
      DIMENSION HNEW(NCOL,NROW,NLAY),SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
      COMMON /GHBCOM/GHBAUX(5)
      CHARACTER*16 GHBAUX
C     ------------------------------------------------------------------
C
C1------IF NBOUND<=0 THEN THERE ARE NO GENERAL HEAD BOUNDS. RETURN.
      IF(NBOUND.LE.0) RETURN
C
C--SEAWAT: FIND GHBELEV AND GHBDENS IF EXIST AS AUX VARIABLES
      LOCGHBELEV=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBELEV') LOCGHBELEV=I+5
      ENDDO 
      LOCGHBDENS=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBDENS') LOCGHBDENS=I+5
      ENDDO 
      LOCGHBSSMDENSE=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBSSMDENSE') LOCGHBSSMDENSE=I+5
      ENDDO
C
C2------PROCESS EACH ENTRY IN THE GENERAL HEAD BOUND LIST (BNDS).
      DO 100 L=1,NBOUND
C
C3------GET COLUMN, ROW AND LAYER OF CELL CONTAINING BOUNDARY.
        IL=BNDS(1,L)
        IR=BNDS(2,L)
        IC=BNDS(3,L)
C
C4------IF THE CELL IS EXTERNAL THEN SKIP IT.
        IF(IBOUND(IC,IR,IL).LE.0) GO TO 100
C
C5------SINCE THE CELL IS INTERNAL GET THE BOUNDARY DATA.
        HB=BNDS(4,L)
        C=BNDS(5,L)
C--SEAWAT: SET GHBELEV
        GHBELEV=ELEV(IC,IR,IL)
        IF(LOCGHBELEV.GT.0) GHBELEV=BNDS(LOCGHBELEV,L)
C--SEAWAT: SET GHBDENS 
        GHBDENS=PS(IC,IR,IL)
        IF(LOCGHBDENS.GT.0) GHBDENS=BNDS(LOCGHBDENS,L)
        IF(MT3DRHOFLG.NE.0) THEN
            IF(LOCGHBSSMDENSE.GT.0) THEN
                GHBDENS=BNDS(LOCGHBSSMDENSE,L)
            ELSE
                GHBDENS=SSMDENSE(IC,IR,IL,5,MXSS,NSS,SS,NCOMP,SSMC)
            ENDIF
        ENDIF
C--SEAWAT: CONVERT HB TO FRESHWATER EQUIVALENT
        HB=FEHEAD(HB,GHBDENS,GHBELEV)
C--SEAWAT: SET AVERAGE DENSITY, AND FIND DIRECTION OF FLOW
        RHOAVG=(GHBDENS+PS(IC,IR,IL))/2
        DIRECT=HB-HNEW(IC,IR,IL)+
     &           (RHOAVG-DENSEREF)/DENSEREF*(GHBELEV-ELEV(IC,IR,IL))
C--SEAWAT: IF DIRECT IS POSITIVE, FLOW IS FROM GHB AND INTO MODEL CELL
        IF(DIRECT.LT.0.) GHBDENS=PS(IC,IR,IL)
C
C6------ADD TERMS TO RHS AND HCOF.
        HCOF(IC,IR,IL)=HCOF(IC,IR,IL)-C*GHBDENS
C--SEAWAT: USE VD FORM
        RHS(IC,IR,IL)=RHS(IC,IR,IL)-C*GHBDENS*
     &                  (HB+(RHOAVG-DENSEREF)/DENSEREF*
     &                  (GHBELEV-ELEV(IC,IR,IL)))
C      RHS(IC,IR,IL)=RHS(IC,IR,IL)-C*HB
  100 CONTINUE
C
C7------RETURN.
      RETURN
      END
C
C
      SUBROUTINE VDF1GHB6BD(NBOUND,MXBND,VBNM,VBVL,MSUM,BNDS,DELT,HNEW
     1   ,NCOL,NROW,NLAY,IBOUND,KSTP,KPER,IGHBCB,ICBCFL,BUFF,IOUT,
     2   PERTIM,TOTIM,NGHBVL,IGHBAL,IAUXSV,
     3   MXSS,NSS,SS,NCOMP,SSMC,NSSVL)
C-----VERSION 05JUNE2000 GWF1GHB6BD
C     ******************************************************************
C     CALCULATE VOLUMETRIC BUDGET FOR GHB
C--SEAWAT: USE VARIABLE-DENSITY FORM OF DARCY'S LAW
C     ******************************************************************
C
C     SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE VDFMODULE,   ONLY: MT3DRHOFLG,DENSEREF,PS,ELEV
C
      COMMON /GHBCOM/GHBAUX(5)
      CHARACTER*16 GHBAUX
      CHARACTER*16 VBNM(MSUM),TEXT
C--SEAWAT: MAKE HB, AND DOUBLE PRECISION SO FEHEAD CAN BE USED
      DOUBLE PRECISION HNEW,CC,CHB,RATIN,RATOUT,RRATE,HB
      DIMENSION VBVL(4,MSUM),BNDS(NGHBVL,MXBND),HNEW(NCOL,NROW,NLAY),
     1           IBOUND(NCOL,NROW,NLAY),BUFF(NCOL,NROW,NLAY)
C
      DATA TEXT /' HEAD DEP BOUNDS'/
C--SEAWAT: DIMENSION ADDITIONAL ARRAYS
      DIMENSION SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
C     ------------------------------------------------------------------
C
C1------INITIALIZE CELL-BY-CELL FLOW TERM FLAG (IBD) AND
C1------ACCUMULATORS (RATIN AND RATOUT).
      ZERO=0.
      RATOUT=ZERO
      RATIN=ZERO
      IBD=0
      IF(IGHBCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
      IF(IGHBCB.GT.0) IBD=ICBCFL
      IBDLBL=0
C
C2------IF CELL-BY-CELL FLOWS WILL BE SAVED AS A LIST, WRITE HEADER.
      IF(IBD.EQ.2) THEN
         NAUX=NGHBVL-5-IGHBAL
         IF(IAUXSV.EQ.0) NAUX=0
         CALL UBDSV4(KSTP,KPER,TEXT,NAUX,GHBAUX,IGHBCB,NCOL,NROW,NLAY,
     1          NBOUND,IOUT,DELT,PERTIM,TOTIM,IBOUND)
      END IF
C
C3------CLEAR THE BUFFER.
      DO 50 IL=1,NLAY
      DO 50 IR=1,NROW
      DO 50 IC=1,NCOL
        BUFF(IC,IR,IL)=ZERO
50    CONTINUE
C
C4------IF NO BOUNDARIES, SKIP FLOW CALCULATIONS.
      IF(NBOUND.EQ.0) GO TO 200
C
C--SEAWAT: FIND GHBELEV AND GHBDENS IF EXIST AS AUX VARIABLES
      LOCGHBELEV=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBELEV') LOCGHBELEV=I+5
      ENDDO 
      LOCGHBDENS=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBDENS') LOCGHBDENS=I+5
      ENDDO
      LOCGHBSSMDENSE=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBSSMDENSE') LOCGHBSSMDENSE=I+5
      ENDDO
C
C5------LOOP THROUGH EACH BOUNDARY CALCULATING FLOW.
      DO 100 L=1,NBOUND
C
C5A-----GET LAYER, ROW AND COLUMN OF EACH GENERAL HEAD BOUNDARY.
        IL=BNDS(1,L)
        IR=BNDS(2,L)
        IC=BNDS(3,L)
        RATE=ZERO
C
C5B-----IF CELL IS NO-FLOW OR CONSTANT-HEAD, THEN IGNORE IT.
        IF(IBOUND(IC,IR,IL).LE.0) GO TO 99
C
C5C-----GET PARAMETERS FROM BOUNDARY LIST.
        HB=BNDS(4,L)
        HHNEW=HNEW(IC,IR,IL)
        C=BNDS(5,L)
        CC=C
        GHBELEV=ELEV(IC,IR,IL)
        IF(LOCGHBELEV.GT.0) GHBELEV=BNDS(LOCGHBELEV,L)
        GHBDENS=PS(IC,IR,IL)
        IF(LOCGHBDENS.GT.0) GHBDENS=BNDS(LOCGHBDENS,L)
        IF(MT3DRHOFLG.NE.0) THEN
            IF(LOCGHBSSMDENSE.GT.0) THEN
                GHBDENS=BNDS(LOCGHBSSMDENSE,L)
            ELSE
                GHBDENS=SSMDENSE(IC,IR,IL,5,MXSS,NSS,SS,NCOMP,SSMC)
            ENDIF
        ENDIF
C--SEAWAT: CONVERT HB TO FRESHWATER EQUIVALENT
        HB=FEHEAD(HB,GHBDENS,GHBELEV)
        RHOAVG=(PS(IC,IR,IL)+GHBDENS)/2
        DIRECT=HB-HHNEW+(PS(IC,IR,IL)-DENSEREF)/DENSEREF*
     &           (GHBELEV-ELEV(IC,IR,IL))
C--SEAWAT: IF DIRECT IS POSITIVE, FLOW IS FROM GHB AND INTO MODEL CELL
        IF(DIRECT.LT.0.) GHBDENS=PS(IC,IR,IL)
        RATE=C*GHBDENS*(HB-HHNEW+(RHOAVG-DENSEREF)/DENSEREF*
     &         (GHBELEV-ELEV(IC,IR,IL)))
        RRATE=RATE
C5E-----PRINT THE INDIVIDUAL RATES IF REQUESTED(IGHBCB<0).
        IF(IBD.LT.0) THEN
            IF(IBDLBL.EQ.0) WRITE(IOUT,61) TEXT,KPER,KSTP
   61       FORMAT(1X,/1X,A,'   PERIOD',I4,'   STEP',I3)
C--SEAWAT: WRITE VOLUMETRIC RATE
            WRITE(IOUT,62) L,IL,IR,IC,RATE/GHBDENS
   62       FORMAT(1X,'BOUNDARY',I4,'   LAYER',I3,'   ROW',I5,
     1               '   COL',I5,'   RATE',1PG15.6)
            IBDLBL=1
        END IF
C
C5F-----ADD RATE TO BUFFER.
C--SEAWAT: CONVERT BACK TO VOLUMETRIC FLUX
C--SEAWAT: RRATE REMAINS MASS FLUX
        RATE=RATE/GHBDENS
        BUFF(IC,IR,IL)=BUFF(IC,IR,IL)+RATE
C
C5G-----SEE IF FLOW IS INTO AQUIFER OR OUT OF AQUIFER.
        IF(RATE)94,99,96
C
C5H------FLOW IS OUT OF AQUIFER SUBTRACT RATE FROM RATOUT.
94      RATOUT=RATOUT-RRATE
        GO TO 99
C
C5I-----FLOW IS INTO AQIFER; ADD RATE TO RATIN.
96      RATIN=RATIN+RRATE
C
C5J-----IF SAVING CELL-BY-CELL FLOWS IN LIST, WRITE FLOW.  OR IF
C5J-----RETURNING THE FLOW IN THE BNDS ARRAY, COPY FLOW TO BNDS.
99      IF(IBD.EQ.2) CALL UBDSVB(IGHBCB,NCOL,NROW,IC,IR,IL,RATE,
     1                  BNDS(1,L),NGHBVL,NAUX,6,IBOUND,NLAY)
        IF(IGHBAL.NE.0) BNDS(NGHBVL,L)=RATE
100   CONTINUE
C
C6------IF CELL-BY-CELL TERMS WILL BE SAVED AS A 3-D ARRAY, THEN CALL
C6------UTILITY MODULE UBUDSV TO SAVE THEM.
      IF(IBD.EQ.1) CALL UBUDSV(KSTP,KPER,TEXT,IGHBCB,BUFF,NCOL,NROW,
     1                          NLAY,IOUT)
C
C7------MOVE RATES, VOLUMES AND LABELS INTO ARRAYS FOR PRINTING.
  200 RIN=RATIN
      ROUT=RATOUT
      VBVL(3,MSUM)=RIN
      VBVL(1,MSUM)=VBVL(1,MSUM)+RIN*DELT
      VBVL(4,MSUM)=ROUT
      VBVL(2,MSUM)=VBVL(2,MSUM)+ROUT*DELT
      VBNM(MSUM)=TEXT
C
C8------INCREMENT THE BUDGET TERM COUNTER.
      MSUM=MSUM+1
C
C9------RETURN.
      RETURN
      END
C
C
      SUBROUTINE VDF1GHB6SSMDENSE(IOUT,NBOUND,MXBND,BNDS,NGHBVL,
     1                          MXSS,NSS,SS,NCOMP,SSMC,NSSVL)
C-----VERSION 09SEPTEMBER2009 VDF1GHB6SSMDENSE
C     ******************************************************************
C     USE AUXILIARY SPACE TO STORE GHB DENSITY
C     ******************************************************************
C
C     SPECIFICATIONS:
C     ------------------------------------------------------------------
      DIMENSION BNDS(NGHBVL,MXBND)
      DIMENSION SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
      COMMON /GHBCOM/GHBAUX(5)
      CHARACTER*16 GHBAUX
C     ------------------------------------------------------------------
C
      IQ=5
C
C-----RETURN FROM THIS ROUTINE IF DENSITY NOT STORED IN BNDS ARRAY
      ILOC=0
      DO I=1,5
        IF(GHBAUX(I).EQ.'GHBSSMDENSE') ILOC=I+5
      ENDDO   
      IF(ILOC.EQ.0) RETURN
      WRITE(IOUT,100)
C
C-----RETURN IF THERE ARE NO GHBS FOR THIS STRESS PERIOD
      IF(NBOUND.LE.0) RETURN
C
C
C-----LOOP THROUGH EACH GHB AND STORE DENSITY IN BNDS ARRAY
      DO L=1,NBOUND
        IL=BNDS(1,L)
        IR=BNDS(2,L)
        IC=BNDS(3,L)
        BNDS(ILOC,L)=SSMDENSE(IC,IR,IL,IQ,MXSS,NSS,SS,NCOMP,SSMC)
      ENDDO
C
  100 FORMAT(1X,'THE GHB AUXILIARY VARIABLE GHBSSMDENSE IS BEING ',
     &       'USED TO STORE DENSITY CALCULATED FROM THE SSM ARRAY.',//)
C
      RETURN
      END

