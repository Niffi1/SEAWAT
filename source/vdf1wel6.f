
      SUBROUTINE VDF1WEL6FM(NWELLS,MXWELL,RHS,WELL,IBOUND,
     1        NCOL,NROW,NLAY,NWELVL,MXSS,NSS,SS,
     2        NCOMP,SSMC,NSSVL)
C
C-----VERSION 11JAN2000 GWF1WEL6FM
C
C     ******************************************************************
C     SUBTRACT Q*DENSE FROM RHS
C--SEAWAT: MODIFIED FOR VARIABLE DENSITY FLOW
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE VDFMODULE,   ONLY: MT3DRHOFLG,DENSEREF,PS
C
      DIMENSION RHS(NCOL,NROW,NLAY),WELL(NWELVL,MXWELL),
     1            IBOUND(NCOL,NROW,NLAY)
C--SEAWAT: DIMENSION ADDITIONAL ARRAYS
      DIMENSION SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
      CHARACTER*16 WELAUX
      COMMON /WELCOM/WELAUX(5)
C     ------------------------------------------------------------------
C1------IF NUMBER OF WELLS <= 0 THEN RETURN.
      IF(NWELLS.LE.0) RETURN
C
C--SEAWAT: FIND AUX VARIABLE WELDENS IF EXISTS
      LOCWELDENS=0
      DO I=1,5
        IF(WELAUX(I).EQ.'WELDENS') LOCWELDENS=I+4
      ENDDO
      LOCWELSSMDENSE=0
      DO I=1,5
        IF(WELAUX(I).EQ.'WELSSMDENSE') LOCWELSSMDENSE=I+4
      ENDDO
C
C2------PROCESS EACH WELL IN THE WELL LIST.
      DO 100 L=1,NWELLS
        IR=WELL(2,L)
        IC=WELL(3,L)
        IL=WELL(1,L)
        Q=WELL(4,L)
C--SEAWAT: MODIFY TO CONSERVE MASS
        IF(Q.LE.0) DENSE=PS(IC,IR,IL)
        IF(Q.GT.0) THEN
            DENSE=DENSEREF  
            IF(LOCWELDENS.GT.0) DENSE=WELL(LOCWELDENS,L)
            IF(MT3DRHOFLG.NE.0) THEN
                IF(LOCWELSSMDENSE.GT.0) THEN
                    DENSE=WELL(LOCWELSSMDENSE,L)
                ELSE
                    DENSE=SSMDENSE(IC,IR,IL,2,MXSS,NSS,SS,NCOMP,SSMC)
                ENDIF
            ENDIF
        ENDIF
C
C2A-----IF THE CELL IS INACTIVE THEN BYPASS PROCESSING.
        IF(IBOUND(IC,IR,IL).LE.0) GO TO 100
C
C2B-----IF THE CELL IS VARIABLE HEAD THEN SUBTRACT Q FROM THE RHS 
C       ACCUMULATOR.
C--SEAWAT: MULTIPLY Q BY DENSE TO CONSERVE MASS
C     RHS(IC,IR,IL)=RHS(IC,IR,IL)-Q
        RHS(IC,IR,IL)=RHS(IC,IR,IL)-DENSE*Q
  100 CONTINUE
C
C3------RETURN
      RETURN
      END



      SUBROUTINE VDF1WEL6BD(NWELLS,MXWELL,VBNM,VBVL,MSUM,WELL,IBOUND,
     1        DELT,NCOL,NROW,NLAY,KSTP,KPER,IWELCB,ICBCFL,BUFF,IOUT,
     2        PERTIM,TOTIM,NWELVL,IWELAL,IAUXSV,MXSS,NSS,SS,
     2        NCOMP,SSMC,NSSVL)
C-----VERSION 05JUNE2000 GWF1WEL6BD
C     ******************************************************************
C     CALCULATE VOLUMETRIC BUDGET FOR WELLS
C--SEAWAT: MODIFIED TO WORK FOR VARIABLE-DENSITY FLOW
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE VDFMODULE,   ONLY: MT3DRHOFLG,DENSEREF,PS
C
      COMMON /WELCOM/WELAUX(5)
      CHARACTER*16 WELAUX
      CHARACTER*16 VBNM(MSUM),TEXT
      DIMENSION VBVL(4,MSUM),WELL(NWELVL,MXWELL),IBOUND(NCOL,NROW,NLAY),
     1          BUFF(NCOL,NROW,NLAY)
      DOUBLE PRECISION RATIN,RATOUT,QQ
      DATA TEXT /'           WELLS'/
C--SEAWAT: DIMENSION ADDITIONAL ARRAYS
      DIMENSION SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
C     ------------------------------------------------------------------
C
C1------CLEAR RATIN AND RATOUT ACCUMULATORS, AND SET CELL-BY-CELL
C1------BUDGET FLAG.
      ZERO=0.
      RATIN=ZERO
      RATOUT=ZERO
      IBD=0
      IF(IWELCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
      IF(IWELCB.GT.0) IBD=ICBCFL
      IBDLBL=0
C
C2-----IF CELL-BY-CELL FLOWS WILL BE SAVED AS A LIST, WRITE HEADER.
      IF(IBD.EQ.2) THEN
         NAUX=NWELVL-4-IWELAL
         IF(IAUXSV.EQ.0) NAUX=0
         CALL UBDSV4(KSTP,KPER,TEXT,NAUX,WELAUX,IWELCB,NCOL,NROW,NLAY,
     1          NWELLS,IOUT,DELT,PERTIM,TOTIM,IBOUND)
      END IF
C
C3------CLEAR THE BUFFER.
      DO 50 IL=1,NLAY
      DO 50 IR=1,NROW
      DO 50 IC=1,NCOL
      BUFF(IC,IR,IL)=ZERO
50    CONTINUE
C
C4------IF THERE ARE NO WELLS, DO NOT ACCUMULATE FLOW.
      IF(NWELLS.EQ.0) GO TO 200
C
C--SEAWAT: FIND AUX VARIABLE WELDENS IF EXISTS
      LOCWELDENS=0
      DO I=1,5
        IF(WELAUX(I).EQ.'WELDENS') LOCWELDENS=I+4
      ENDDO
      LOCWELSSMDENSE=0
      DO I=1,5
        IF(WELAUX(I).EQ.'WELSSMDENSE') LOCWELSSMDENSE=I+4
      ENDDO
C
C5------LOOP THROUGH EACH WELL CALCULATING FLOW.
      DO 100 L=1,NWELLS
C
C5A-----GET LAYER, ROW & COLUMN OF CELL CONTAINING WELL.
      IR=WELL(2,L)
      IC=WELL(3,L)
      IL=WELL(1,L)
      Q=ZERO
C
C5B-----IF THE CELL IS NO-FLOW OR CONSTANT_HEAD, IGNORE IT.
      IF(IBOUND(IC,IR,IL).LE.0)GO TO 99
C
C5C-----GET FLOW RATE FROM WELL LIST.
      Q=WELL(4,L)
      IF(Q.LE.0) DENSE=PS(IC,IR,IL)
      IF(Q.GT.0) THEN
         DENSE=DENSEREF  
         IF(LOCWELDENS.GT.0) DENSE=WELL(LOCWELDENS,L)
            IF(MT3DRHOFLG.NE.0) THEN
                IF(LOCWELSSMDENSE.GT.0) THEN
                    DENSE=WELL(LOCWELSSMDENSE,L)
                ELSE
                    DENSE=SSMDENSE(IC,IR,IL,2,MXSS,NSS,SS,NCOMP,SSMC)
                ENDIF
            ENDIF
      ENDIF
      QQ=Q*DENSE
C
C5D-----PRINT FLOW RATE IF REQUESTED.
      IF(IBD.LT.0) THEN
         IF(IBDLBL.EQ.0) WRITE(IOUT,61) TEXT,KPER,KSTP
   61    FORMAT(1X,/1X,A,'   PERIOD',I4,'   STEP',I3)
         WRITE(IOUT,62) L,IL,IR,IC,Q/DENSE
   62    FORMAT(1X,'WELL',I4,'   LAYER',I3,'   ROW',I5,'   COL',I5,
     1       '   RATE',1PG15.6)
         IBDLBL=1
      END IF
C
C5E-----ADD FLOW RATE TO BUFFER.
      BUFF(IC,IR,IL)=BUFF(IC,IR,IL)+Q
C
C5F-----SEE IF FLOW IS POSITIVE OR NEGATIVE.
      IF(Q) 90,99,80
C
C5G-----FLOW RATE IS POSITIVE (RECHARGE). ADD IT TO RATIN.
   80 RATIN=RATIN+QQ
      GO TO 99
C
C5H-----FLOW RATE IS NEGATIVE (DISCHARGE). ADD IT TO RATOUT.
   90 RATOUT=RATOUT-QQ
C
C5I-----IF CELL-BY-CELL FLOWS ARE BEING SAVED AS A LIST, WRITE FLOW.
C5I-----OR IF RETURNING THE FLOW IN THE WELL ARRAY, COPY FLOW TO WELL.
   99 IF(IBD.EQ.2) CALL UBDSVB(IWELCB,NCOL,NROW,IC,IR,IL,Q,
     1                  WELL(1,L),NWELVL,NAUX,5,IBOUND,NLAY)
      IF(IWELAL.NE.0) WELL(NWELVL,L)=Q
  100 CONTINUE
C
C6------IF CELL-BY-CELL FLOWS WILL BE SAVED AS A 3-D ARRAY,
C6------CALL UBUDSV TO SAVE THEM.
      IF(IBD.EQ.1) CALL UBUDSV(KSTP,KPER,TEXT,IWELCB,BUFF,NCOL,NROW,
     1                          NLAY,IOUT)
C
C7------MOVE RATES, VOLUMES & LABELS INTO ARRAYS FOR PRINTING.
  200 RIN=RATIN
      ROUT=RATOUT
      VBVL(3,MSUM)=RIN
      VBVL(4,MSUM)=ROUT
      VBVL(1,MSUM)=VBVL(1,MSUM)+RIN*DELT
      VBVL(2,MSUM)=VBVL(2,MSUM)+ROUT*DELT
      VBNM(MSUM)=TEXT
C
C8------INCREMENT BUDGET TERM COUNTER(MSUM).
      MSUM=MSUM+1
C
C9------RETURN
      RETURN
      END
C
      SUBROUTINE VDF1WEL6SSMDENSE(IOUT,NWELLS,MXWELL,WELL,NWELVL,
     1                          MXSS,NSS,SS,NCOMP,SSMC,NSSVL)
C-----VERSION 09SEPTEMBER2009 VDF1WEL6SSMDENSE
C     ******************************************************************
C     USE AUXILIARY SPACE TO STORE WELL DENSITY
C     ******************************************************************
C
C     SPECIFICATIONS:
C     ------------------------------------------------------------------
      DIMENSION WELL(NWELVL,MXWELL)
      DIMENSION SS(NSSVL,MXSS),SSMC(NCOMP,MXSS)
      COMMON /WELCOM/WELAUX(5)
      CHARACTER*16 WELAUX
C     ------------------------------------------------------------------
C
      IQ=2
C
C-----RETURN FROM THIS ROUTINE IF DENSITY NOT STORED IN WELL ARRAY
      ILOC=0
      DO I=1,5
        IF(WELAUX(I).EQ.'WELSSMDENSE') ILOC=I+4
      ENDDO   
      IF(ILOC.EQ.0) RETURN
      WRITE(IOUT,100)
C
C-----RETURN IF THERE ARE NO WELLS FOR THIS STRESS PERIOD
      IF(NWELLS.LE.0) RETURN
C
C
C-----LOOP THROUGH EACH WELL AND STORE DENSITY IN WELL ARRAY
      DO L=1,NWELLS
        IL=WELL(1,L)
        IR=WELL(2,L)
        IC=WELL(3,L)
        WELL(ILOC,L)=SSMDENSE(IC,IR,IL,IQ,MXSS,NSS,SS,NCOMP,SSMC)
      ENDDO
C
  100 FORMAT(1X,'THE WELL AUXILIARY VARIABLE WELSSMDENSE IS BEING ',
     &       'USED TO STORE DENSITY CALCULATED FROM THE SSM ARRAY.',//)
C
      RETURN
      END
